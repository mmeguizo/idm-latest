{"version":3,"file":"7304.b5153e13bbd7f8bc.js","mappings":"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","names":["_c0","_c1","_c2","_c3","_c4","_c5","_c6","a0","ColorPicker_input_2_Template","rf","ctx","_r5","i0","ctx_r4","onInputClick","$event","ctx_r6","onInputKeydown","ctx_r7","onInputFocus","ctx_r1","inputBgColor","disabled","tabindex","inputId","_c7","a1","a2","_c8","showTransitionParams","hideTransitionParams","_c9","value","params","ColorPicker_div_3_Template","_r13","ctx_r12","onOverlayClick","ctx_r14","onOverlayAnimationStart","ctx_r15","onOverlayAnimationEnd","ctx_r16","onColorDragStart","ctx_r17","onDrag","ctx_r18","onDragEnd","ctx_r19","onColorMousedown","ctx_r20","onHueMousedown","ctx_r21","onHueDragStart","ctx_r22","ctx_r23","ctx_r2","inline","showTransitionOptions","hideTransitionOptions","_c10","COLORPICKER_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","ColorPicker","multi","document","platformId","el","renderer","cd","config","overlayService","style","styleClass","format","appendTo","autoZIndex","baseZIndex","onChange","EventEmitter","onShow","onHide","containerViewChild","inputViewChild","h","s","b","shown","overlayVisible","defaultColor","onModelChange","onModelTouched","documentClickListener","documentResizeListener","documentMousemoveListener","documentMouseupListener","documentHueMoveListener","scrollHandler","selfClick","colorDragging","hueDragging","overlay","colorSelectorViewChild","colorHandleViewChild","hueViewChild","hueHandleViewChild","window","constructor","this","defaultView","colorSelector","element","colorHandle","hue","hueHandle","event","bindDocumentMousemoveListener","bindDocumentMouseupListener","pickHue","changedTouches","pickColor","position","pageY","top","nativeElement","getBoundingClientRect","pageYOffset","documentElement","scrollTop","body","validateHSB","Math","floor","max","min","updateColorSelector","updateUI","updateModel","emit","originalEvent","getValueToUpdate","preventDefault","unbindDocumentMousemoveListener","unbindDocumentMouseupListener","pageX","rect","saturation","left","scrollLeft","brightness","val","HSBtoHEX","HSBtoRGB","writeValue","HEXtoHSB","RGBtoHSB","markForCheck","hsb","backgroundColor","show","toState","appendOverlay","ZIndexUtils","set","zIndex","alignOverlay","bindDocumentClickListener","bindDocumentResizeListener","bindScrollListener","onOverlayHide","clear","appendChild","DomHandler","restoreOverlayAppend","absolutePosition","relativePosition","hide","togglePanel","code","add","target","registerOnChange","fn","registerOnTouched","setDisabledState","listen","ownerDocument","unbindDocumentClickListener","isPlatformBrowser","onWindowResize","bind","unbindDocumentResizeListener","isTouchDevice","ConnectedOverlayScrollHandler","unbindScrollListener","validateRGB","rgb","r","g","validateHEX","hex","len","length","o","i","push","join","HEXtoRGB","hexValue","parseInt","indexOf","substring","delta","v","t1","t2","t3","round","RGBtoHEX","toString","key","ngOnDestroy","destroy","static","t","DOCUMENT","PLATFORM_ID","i1","type","selectors","viewQuery","_t","first","hostAttrs","inputs","outputs","features","decls","vars","consts","template","dependencies","i2","styles","encapsulation","data","animation","trigger","transition","opacity","transform","animate","changeDetection","ColorPickerModule","imports","CommonModule","Knob__svg_text_4_Template","ctx_r0","textColor","name","valueToDisplay","KNOB_VALUE_ACCESSOR","Knob","ariaLabel","ariaLabelledBy","valueColor","rangeColor","valueTemplate","size","step","strokeWidth","showValue","readonly","radius","midX","midY","minRadians","PI","maxRadians","windowMouseMoveListener","windowMouseUpListener","windowTouchMoveListener","windowTouchEndListener","mapRange","x","inMin","inMax","outMin","outMax","onClick","updateValue","offsetX","offsetY","angle","atan2","start","mappedValue","newValue","onMouseDown","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","TouchEvent","touches","children","touch","targetTouches","item","clientX","clientY","updateModelValue","onKeyDown","_value","containerClass","rangePath","minX","minY","maxX","maxY","valuePath","zeroX","zeroY","largeArc","sweep","valueX","valueY","zeroRadians","valueRadians","cos","sin","abs","replace","KnobModule","Listbox_div_3_ng_container_2_Template","$implicit","options","Listbox_div_3_Template","headerTemplate","modelValue","visibleOptions","Listbox_div_4_div_1_ng_container_5_CheckIcon_1_Template","Listbox_div_4_div_1_ng_container_5_span_2_1_ng_template_0_Template","Listbox_div_4_div_1_ng_container_5_span_2_1_Template","Listbox_div_4_div_1_ng_container_5_span_2_Template","checkIconTemplate","Listbox_div_4_div_1_ng_container_5_Template","Listbox_div_4_div_1_Template","_r22","onToggleAll","onHeaderCheckboxKeyDown","ctx_r24","onHeaderCheckboxFocus","ctx_r25","onHeaderCheckboxBlur","ctx_r11","toggleAllDisabled","allSelected","toggleAllAriaLabel","headerCheckboxFocus","Listbox_div_4_ng_container_2_ng_container_1_Template","Listbox_div_4_ng_container_2_Template","filterTemplate","filterOptions","Listbox_div_4_ng_template_3_div_0_SearchIcon_3_Template","Listbox_div_4_ng_template_3_div_0_span_4_1_ng_template_0_Template","Listbox_div_4_ng_template_3_div_0_span_4_1_Template","Listbox_div_4_ng_template_3_div_0_span_4_Template","ctx_r30","filterIconTemplate","Listbox_div_4_ng_template_3_div_0_Template","_r34","ctx_r33","onFilterChange","ctx_r35","onFilterKeyDown","ctx_r36","onFilterBlur","ctx_r27","_filterValue","focused","id","focusedOptionId","filterPlaceHolder","ariaFilterLabel","Listbox_div_4_ng_template_3_Template","ctx_r13","filter","filterResultMessageText","Listbox_div_4_Template","_r14","checkbox","multiple","showToggleAll","Listbox_p_scroller_6_ng_template_2_ng_container_0_Template","Listbox_p_scroller_6_ng_template_2_Template","items_r40","scrollerOptions_r41","_r6","Listbox_p_scroller_6_ng_container_3_ng_template_1_ng_container_0_Template","Listbox_p_scroller_6_ng_container_3_ng_template_1_Template","scrollerOptions_r44","ctx_r43","loaderTemplate","Listbox_p_scroller_6_ng_container_3_Template","height","Listbox_p_scroller_6_Template","_r47","ctx_r46","onLazyLoad","ctx_r3","scrollHeight","virtualScrollItemSize","lazy","virtualScrollOptions","Listbox_ng_container_7_ng_container_1_Template","_c11","Listbox_ng_container_7_Template","Listbox_ng_template_8_ng_template_2_ng_container_0_span_2_Template","option_r55","ctx_r59","getOptionGroupLabel","optionGroup","Listbox_ng_template_8_ng_template_2_ng_container_0_ng_container_3_Template","_c12","Listbox_ng_template_8_ng_template_2_ng_container_0_Template","ctx_r63","i_r56","index","scrollerOptions_r50","ctx_r57","itemSize","getOptionIndex","groupTemplate","Listbox_ng_template_8_ng_template_2_ng_container_1_div_2_ng_container_2_CheckIcon_1_Template","Listbox_ng_template_8_ng_template_2_ng_container_1_div_2_ng_container_2_span_2_1_ng_template_0_Template","Listbox_ng_template_8_ng_template_2_ng_container_1_div_2_ng_container_2_span_2_1_Template","Listbox_ng_template_8_ng_template_2_ng_container_1_div_2_ng_container_2_span_2_Template","ctx_r69","Listbox_ng_template_8_ng_template_2_ng_container_1_div_2_ng_container_2_Template","ctx_r67","_c13","Listbox_ng_template_8_ng_template_2_ng_container_1_div_2_Template","ctx_r64","isOptionDisabled","isSelected","Listbox_ng_template_8_ng_template_2_ng_container_1_span_3_Template","ctx_r65","getOptionLabel","Listbox_ng_template_8_ng_template_2_ng_container_1_ng_container_4_Template","_c14","a3","_c15","Listbox_ng_template_8_ng_template_2_ng_container_1_Template","_r76","ctx_r75","ctx_r74","onOptionSelect","ctx_r78","onOptionDoubleClick","ctx_r80","onOptionMouseDown","ctx_r83","onOptionMouseEnter","ctx_r86","onOptionTouchEnd","ctx_r88","ctx_r58","focusedOptionIndex","getAriaPosInset","ariaSetSize","itemTemplate","Listbox_ng_template_8_ng_template_2_Template","ctx_r52","isOptionGroup","Listbox_ng_template_8_li_3_ng_container_1_Template","ctx_r89","emptyFilterMessageText","Listbox_ng_template_8_li_3_ng_container_2_Template","Listbox_ng_template_8_li_3_Template","ctx_r53","emptyFilterTemplate","emptyTemplate","emptyFilter","Listbox_ng_template_8_li_4_ng_container_1_Template","ctx_r92","emptyMessage","Listbox_ng_template_8_li_4_ng_container_2_Template","Listbox_ng_template_8_li_4_Template","ctx_r54","empty","Listbox_ng_template_8_Template","_r96","ctx_r95","onListFocus","ctx_r97","onListBlur","ctx_r98","onListKeyDown","items_r49","ctx_r5","contentStyle","contentStyleClass","undefined","hasFilter","isEmpty","Listbox_div_10_ng_container_2_Template","Listbox_div_10_Template","footerTemplate","Listbox_span_11_Template","ctx_r8","_c16","_c17","LISTBOX_VALUE_ACCESSOR","Listbox","filterService","searchMessage","emptySelectionMessage","selectionMessage","autoOptionFocus","selectOnFocus","searchLocale","focusOnHover","filterMessage","filterFields","virtualScroll","listStyle","listStyleClass","filterBy","filterMatchMode","filterLocale","metaKeySelection","dataKey","optionLabel","optionValue","optionGroupChildren","optionGroupLabel","optionDisabled","emptyFilterMessage","group","_options","filterValue","selectAll","_selectAll","onDblClick","onFilter","onFocus","onBlur","onSelectAllChange","headerCheckboxViewChild","filterViewChild","lastHiddenFocusableElement","firstHiddenFocusableElement","scroller","listViewChild","headerFacet","footerFacet","templates","signal","_filteredOptions","filtered","optionTouched","focus","translationSubscription","ObjectUtils","isNotEmpty","filterMessageText","replaceAll","translation","searchMessageText","emptySearchMessage","selectionMessageText","emptySelectionMessageText","selectedMessageText","hasSelectedOption","option","virtualScrollerDisabled","searchFields","aria","searchValue","searchTimeout","startRangeIndex","computed","flatOptions","ngOnInit","UniqueComponentId","translationObserver","subscribe","autoUpdateModel","reset","resetFilter","ngAfterContentInit","forEach","getType","reduce","result","getOptionGroupChildren","findFirstFocusedOptionIndex","removeOption","equals","getOptionValue","equalityKey","onOptionSelectMultiple","onOptionSelectSingle","selected","metaKey","ctrlKey","valueChanged","onOptionSelectRange","end","findNearestSelectedOptionIndex","rangeStart","rangeEnd","slice","isValidOption","map","checked","every","changeFocusedOptionIndex","onFirstHiddenFocus","firstFocusableEl","getFirstFocusableElement","tabIndex","onLastHiddenFocus","relatedTarget","onFocusout","contains","onHeaderCheckboxTabKeyDown","trim","scrollToIndex","onArrowDownKey","onArrowUpKey","onHomeKey","onEndKey","onPageDownKey","onPageUpKey","onSpaceKey","onShiftKey","isPrintableCharacter","searchOptions","onArrowLeftKey","onEnterKey","optionIndex","findNextOptionIndex","shiftKey","findPrevOptionIndex","findLastFocusedOptionIndex","pressedInInputText","currentTarget","setSelectionRange","findFirstOptionIndex","findLastOptionIndex","scrollInView","resolveFieldData","items","label","scrollerOptions","getItemOptions","char","matched","findIndex","isOptionMatched","clearTimeout","setTimeout","toLocaleLowerCase","startsWith","findSingle","scrollIntoView","block","findLastIndex","selectedIndex","findFirstSelectedOptionIndex","findLastSelectedOptionIndex","isValidSelectedOption","matchedOptionIndex","findNextSelectedOptionIndex","findPrevSelectedOptionIndex","firstCheckUp","some","unsubscribe","contentQueries","dirIndex","Header","Footer","PrimeTemplate","ngContentSelectors","i3","i4","SearchIcon","CheckIcon","ListboxModule","SharedModule","RippleModule","ScrollerModule","country_r1","toLowerCase","InputDemoComponent","countryService","countries","filteredCountries","selectedCountryAdvanced","valSlider","valColor","valRadio","valCheck","valCheck2","valSwitch","cities","selectedList","selectedDrop","selectedMulti","valToggle","paymentOptions","valSelect1","valSelect2","valueKnob","getCountries","then","filterCountry","query","country","core","Xpm","InputDemoComponent_ng_template_119_Template","InputDemoRoutingModule","oAB","cJS","RouterModule","forChild","path","component","InputDemoModule","FormsModule","AutoCompleteModule","CalendarModule","ChipsModule","DropdownModule","InputMaskModule","InputNumberModule","CascadeSelectModule","MultiSelectModule","ToggleButtonModule","SliderModule","InputTextareaModule","RadioButtonModule","InputTextModule","RatingModule","ChipModule","InputSwitchModule","SelectButtonModule","CheckboxModule","ButtonModule","InputGroupModule","InputGroupAddonModule","SelectButton_div_2_ng_container_1_span_1_Template","option_r2","icon","SelectButton_div_2_ng_container_1_Template","SelectButton_div_2_ng_template_2_ng_container_0_Template","SelectButton_div_2_ng_template_2_Template","i_r3","selectButtonTemplate","SelectButton_div_2_Template","restoredCtx","focusedIndex","title","SELECTBUTTON_VALUE_ACCESSOR","SelectButton","unselectable","allowEmpty","onOptionClick","container","changeTabIndexes","direction","firstTabableChild","getAttribute","elem","Array","isArray"],"sourceRoot":"webpack:///","sources":["./node_modules/primeng/fesm2022/primeng-colorpicker.mjs","./node_modules/primeng/fesm2022/primeng-knob.mjs","./node_modules/primeng/fesm2022/primeng-listbox.mjs","./src/app/demo/components/uikit/input/inputdemo.component.html","./src/app/demo/components/uikit/input/inputdemo.component.ts","./src/app/demo/components/uikit/input/inputdemo-routing.module.ts","./src/app/demo/components/uikit/input/inputdemo.module.ts","./node_modules/primeng/fesm2022/primeng-selectbutton.mjs"],"sourcesContent":["import { style, animate, transition, trigger } from '@angular/animations';\nimport * as i2 from '@angular/common';\nimport { isPlatformBrowser, DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, PLATFORM_ID, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { ZIndexUtils } from 'primeng/utils';\nimport * as i1 from 'primeng/api';\n\nconst COLORPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ColorPicker),\n    multi: true\n};\n/**\n * ColorPicker groups a collection of contents in tabs.\n * @group Components\n */\nclass ColorPicker {\n    document;\n    platformId;\n    el;\n    renderer;\n    cd;\n    config;\n    overlayService;\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    style;\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Whether to display as an overlay or not.\n     * @group Props\n     */\n    inline;\n    /**\n     * Format to use in value binding.\n     * @group Props\n     */\n    format = 'hex';\n    /**\n     * Target element to attach the overlay, valid values are \"body\" or a local ng-template variable of another element (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\n     * @group Props\n     */\n    appendTo;\n    /**\n     * When present, it specifies that the component should be disabled.\n     * @group Props\n     */\n    disabled;\n    /**\n     * Index of the element in tabbing order.\n     * @group Props\n     */\n    tabindex;\n    /**\n     * Identifier of the focus input to match a label defined for the dropdown.\n     * @group Props\n     */\n    inputId;\n    /**\n     * Whether to automatically manage layering.\n     * @group Props\n     */\n    autoZIndex = true;\n    /**\n     * Base zIndex value to use in layering.\n     * @group Props\n     */\n    baseZIndex = 0;\n    /**\n     * Transition options of the show animation.\n     * @group Props\n     */\n    showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n    /**\n     * Transition options of the hide animation.\n     * @group Props\n     */\n    hideTransitionOptions = '.1s linear';\n    /**\n     * Callback to invoke on value change.\n     * @param {ColorPickerChangeEvent} event - Custom value change event.\n     * @group Emits\n     */\n    onChange = new EventEmitter();\n    /**\n     * Callback to invoke on panel is shown.\n     * @group Emits\n     */\n    onShow = new EventEmitter();\n    /**\n     * Callback to invoke on panel is hidden.\n     * @group Emits\n     */\n    onHide = new EventEmitter();\n    containerViewChild;\n    inputViewChild;\n    value = { h: 0, s: 100, b: 100 };\n    inputBgColor;\n    shown;\n    overlayVisible;\n    defaultColor = 'ff0000';\n    onModelChange = () => { };\n    onModelTouched = () => { };\n    documentClickListener;\n    documentResizeListener;\n    documentMousemoveListener;\n    documentMouseupListener;\n    documentHueMoveListener;\n    scrollHandler;\n    selfClick;\n    colorDragging;\n    hueDragging;\n    overlay;\n    colorSelectorViewChild;\n    colorHandleViewChild;\n    hueViewChild;\n    hueHandleViewChild;\n    window;\n    constructor(document, platformId, el, renderer, cd, config, overlayService) {\n        this.document = document;\n        this.platformId = platformId;\n        this.el = el;\n        this.renderer = renderer;\n        this.cd = cd;\n        this.config = config;\n        this.overlayService = overlayService;\n        this.window = this.document.defaultView;\n    }\n    set colorSelector(element) {\n        this.colorSelectorViewChild = element;\n    }\n    set colorHandle(element) {\n        this.colorHandleViewChild = element;\n    }\n    set hue(element) {\n        this.hueViewChild = element;\n    }\n    set hueHandle(element) {\n        this.hueHandleViewChild = element;\n    }\n    onHueMousedown(event) {\n        if (this.disabled) {\n            return;\n        }\n        this.bindDocumentMousemoveListener();\n        this.bindDocumentMouseupListener();\n        this.hueDragging = true;\n        this.pickHue(event);\n    }\n    onHueDragStart(event) {\n        if (this.disabled) {\n            return;\n        }\n        this.hueDragging = true;\n        this.pickHue(event, event.changedTouches[0]);\n    }\n    onColorDragStart(event) {\n        if (this.disabled) {\n            return;\n        }\n        this.colorDragging = true;\n        this.pickColor(event, event.changedTouches[0]);\n    }\n    pickHue(event, position) {\n        let pageY = position ? position.pageY : event.pageY;\n        let top = this.hueViewChild?.nativeElement.getBoundingClientRect().top + (this.document.defaultView.pageYOffset || this.document.documentElement.scrollTop || this.document.body.scrollTop || 0);\n        this.value = this.validateHSB({\n            h: Math.floor((360 * (150 - Math.max(0, Math.min(150, pageY - top)))) / 150),\n            s: this.value.s,\n            b: this.value.b\n        });\n        this.updateColorSelector();\n        this.updateUI();\n        this.updateModel();\n        this.onChange.emit({ originalEvent: event, value: this.getValueToUpdate() });\n    }\n    onColorMousedown(event) {\n        if (this.disabled) {\n            return;\n        }\n        this.bindDocumentMousemoveListener();\n        this.bindDocumentMouseupListener();\n        this.colorDragging = true;\n        this.pickColor(event);\n    }\n    onDrag(event) {\n        if (this.colorDragging) {\n            this.pickColor(event, event.changedTouches[0]);\n            event.preventDefault();\n        }\n        if (this.hueDragging) {\n            this.pickHue(event, event.changedTouches[0]);\n            event.preventDefault();\n        }\n    }\n    onDragEnd() {\n        this.colorDragging = false;\n        this.hueDragging = false;\n        this.unbindDocumentMousemoveListener();\n        this.unbindDocumentMouseupListener();\n    }\n    pickColor(event, position) {\n        let pageX = position ? position.pageX : event.pageX;\n        let pageY = position ? position.pageY : event.pageY;\n        let rect = this.colorSelectorViewChild?.nativeElement.getBoundingClientRect();\n        let top = rect.top + (this.document.defaultView.pageYOffset || this.document.documentElement.scrollTop || this.document.body.scrollTop || 0);\n        let left = rect.left + this.document.body.scrollLeft;\n        let saturation = Math.floor((100 * Math.max(0, Math.min(150, pageX - left))) / 150);\n        let brightness = Math.floor((100 * (150 - Math.max(0, Math.min(150, pageY - top)))) / 150);\n        this.value = this.validateHSB({\n            h: this.value.h,\n            s: saturation,\n            b: brightness\n        });\n        this.updateUI();\n        this.updateModel();\n        this.onChange.emit({ originalEvent: event, value: this.getValueToUpdate() });\n    }\n    getValueToUpdate() {\n        let val;\n        switch (this.format) {\n            case 'hex':\n                val = '#' + this.HSBtoHEX(this.value);\n                break;\n            case 'rgb':\n                val = this.HSBtoRGB(this.value);\n                break;\n            case 'hsb':\n                val = this.value;\n                break;\n        }\n        return val;\n    }\n    updateModel() {\n        this.onModelChange(this.getValueToUpdate());\n    }\n    writeValue(value) {\n        if (value) {\n            switch (this.format) {\n                case 'hex':\n                    this.value = this.HEXtoHSB(value);\n                    break;\n                case 'rgb':\n                    this.value = this.RGBtoHSB(value);\n                    break;\n                case 'hsb':\n                    this.value = value;\n                    break;\n            }\n        }\n        else {\n            this.value = this.HEXtoHSB(this.defaultColor);\n        }\n        this.updateColorSelector();\n        this.updateUI();\n        this.cd.markForCheck();\n    }\n    updateColorSelector() {\n        if (this.colorSelectorViewChild) {\n            const hsb = {};\n            hsb.s = 100;\n            hsb.b = 100;\n            hsb.h = this.value.h;\n            this.colorSelectorViewChild.nativeElement.style.backgroundColor = '#' + this.HSBtoHEX(hsb);\n        }\n    }\n    updateUI() {\n        if (this.colorHandleViewChild && this.hueHandleViewChild?.nativeElement) {\n            this.colorHandleViewChild.nativeElement.style.left = Math.floor((150 * this.value.s) / 100) + 'px';\n            this.colorHandleViewChild.nativeElement.style.top = Math.floor((150 * (100 - this.value.b)) / 100) + 'px';\n            this.hueHandleViewChild.nativeElement.style.top = Math.floor(150 - (150 * this.value.h) / 360) + 'px';\n        }\n        this.inputBgColor = '#' + this.HSBtoHEX(this.value);\n    }\n    onInputFocus() {\n        this.onModelTouched();\n    }\n    show() {\n        this.overlayVisible = true;\n        this.cd.markForCheck();\n    }\n    onOverlayAnimationStart(event) {\n        switch (event.toState) {\n            case 'visible':\n                if (!this.inline) {\n                    this.overlay = event.element;\n                    this.appendOverlay();\n                    if (this.autoZIndex) {\n                        ZIndexUtils.set('overlay', this.overlay, this.config.zIndex.overlay);\n                    }\n                    this.alignOverlay();\n                    this.bindDocumentClickListener();\n                    this.bindDocumentResizeListener();\n                    this.bindScrollListener();\n                    this.updateColorSelector();\n                    this.updateUI();\n                }\n                break;\n            case 'void':\n                this.onOverlayHide();\n                break;\n        }\n    }\n    onOverlayAnimationEnd(event) {\n        switch (event.toState) {\n            case 'visible':\n                if (!this.inline) {\n                    this.onShow.emit({});\n                }\n                break;\n            case 'void':\n                if (this.autoZIndex) {\n                    ZIndexUtils.clear(event.element);\n                }\n                this.onHide.emit({});\n                break;\n        }\n    }\n    appendOverlay() {\n        if (this.appendTo) {\n            if (this.appendTo === 'body')\n                this.renderer.appendChild(this.document.body, this.overlay);\n            else\n                DomHandler.appendChild(this.overlay, this.appendTo);\n        }\n    }\n    restoreOverlayAppend() {\n        if (this.overlay && this.appendTo) {\n            this.renderer.appendChild(this.el.nativeElement, this.overlay);\n        }\n    }\n    alignOverlay() {\n        if (this.appendTo)\n            DomHandler.absolutePosition(this.overlay, this.inputViewChild?.nativeElement);\n        else\n            DomHandler.relativePosition(this.overlay, this.inputViewChild?.nativeElement);\n    }\n    hide() {\n        this.overlayVisible = false;\n        this.cd.markForCheck();\n    }\n    onInputClick() {\n        this.selfClick = true;\n        this.togglePanel();\n    }\n    togglePanel() {\n        if (!this.overlayVisible)\n            this.show();\n        else\n            this.hide();\n    }\n    onInputKeydown(event) {\n        switch (event.code) {\n            case 'Space':\n                this.togglePanel();\n                event.preventDefault();\n                break;\n            case 'Escape':\n            case 'Tab':\n                this.hide();\n                break;\n            default:\n                //NoOp\n                break;\n        }\n    }\n    onOverlayClick(event) {\n        this.overlayService.add({\n            originalEvent: event,\n            target: this.el.nativeElement\n        });\n        this.selfClick = true;\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n    bindDocumentClickListener() {\n        if (!this.documentClickListener) {\n            const documentTarget = this.el ? this.el.nativeElement.ownerDocument : 'document';\n            this.documentClickListener = this.renderer.listen(documentTarget, 'click', () => {\n                if (!this.selfClick) {\n                    this.overlayVisible = false;\n                    this.unbindDocumentClickListener();\n                }\n                this.selfClick = false;\n                this.cd.markForCheck();\n            });\n        }\n    }\n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n        }\n    }\n    bindDocumentMousemoveListener() {\n        if (!this.documentMousemoveListener) {\n            const documentTarget = this.el ? this.el.nativeElement.ownerDocument : 'document';\n            this.documentMousemoveListener = this.renderer.listen(documentTarget, 'mousemove', (event) => {\n                if (this.colorDragging) {\n                    this.pickColor(event);\n                }\n                if (this.hueDragging) {\n                    this.pickHue(event);\n                }\n            });\n        }\n    }\n    unbindDocumentMousemoveListener() {\n        if (this.documentMousemoveListener) {\n            this.documentMousemoveListener();\n            this.documentMousemoveListener = null;\n        }\n    }\n    bindDocumentMouseupListener() {\n        if (!this.documentMouseupListener) {\n            const documentTarget = this.el ? this.el.nativeElement.ownerDocument : 'document';\n            this.documentMouseupListener = this.renderer.listen(documentTarget, 'mouseup', () => {\n                this.colorDragging = false;\n                this.hueDragging = false;\n                this.unbindDocumentMousemoveListener();\n                this.unbindDocumentMouseupListener();\n            });\n        }\n    }\n    unbindDocumentMouseupListener() {\n        if (this.documentMouseupListener) {\n            this.documentMouseupListener();\n            this.documentMouseupListener = null;\n        }\n    }\n    bindDocumentResizeListener() {\n        if (isPlatformBrowser(this.platformId)) {\n            this.documentResizeListener = this.renderer.listen(this.window, 'resize', this.onWindowResize.bind(this));\n        }\n    }\n    unbindDocumentResizeListener() {\n        if (this.documentResizeListener) {\n            this.documentResizeListener();\n            this.documentResizeListener = null;\n        }\n    }\n    onWindowResize() {\n        if (this.overlayVisible && !DomHandler.isTouchDevice()) {\n            this.hide();\n        }\n    }\n    bindScrollListener() {\n        if (!this.scrollHandler) {\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.containerViewChild?.nativeElement, () => {\n                if (this.overlayVisible) {\n                    this.hide();\n                }\n            });\n        }\n        this.scrollHandler.bindScrollListener();\n    }\n    unbindScrollListener() {\n        if (this.scrollHandler) {\n            this.scrollHandler.unbindScrollListener();\n        }\n    }\n    validateHSB(hsb) {\n        return {\n            h: Math.min(360, Math.max(0, hsb.h)),\n            s: Math.min(100, Math.max(0, hsb.s)),\n            b: Math.min(100, Math.max(0, hsb.b))\n        };\n    }\n    validateRGB(rgb) {\n        return {\n            r: Math.min(255, Math.max(0, rgb.r)),\n            g: Math.min(255, Math.max(0, rgb.g)),\n            b: Math.min(255, Math.max(0, rgb.b))\n        };\n    }\n    validateHEX(hex) {\n        var len = 6 - hex.length;\n        if (len > 0) {\n            var o = [];\n            for (var i = 0; i < len; i++) {\n                o.push('0');\n            }\n            o.push(hex);\n            hex = o.join('');\n        }\n        return hex;\n    }\n    HEXtoRGB(hex) {\n        let hexValue = parseInt(hex.indexOf('#') > -1 ? hex.substring(1) : hex, 16);\n        return { r: hexValue >> 16, g: (hexValue & 0x00ff00) >> 8, b: hexValue & 0x0000ff };\n    }\n    HEXtoHSB(hex) {\n        return this.RGBtoHSB(this.HEXtoRGB(hex));\n    }\n    RGBtoHSB(rgb) {\n        var hsb = {\n            h: 0,\n            s: 0,\n            b: 0\n        };\n        var min = Math.min(rgb.r, rgb.g, rgb.b);\n        var max = Math.max(rgb.r, rgb.g, rgb.b);\n        var delta = max - min;\n        hsb.b = max;\n        hsb.s = max != 0 ? (255 * delta) / max : 0;\n        if (hsb.s != 0) {\n            if (rgb.r == max) {\n                hsb.h = (rgb.g - rgb.b) / delta;\n            }\n            else if (rgb.g == max) {\n                hsb.h = 2 + (rgb.b - rgb.r) / delta;\n            }\n            else {\n                hsb.h = 4 + (rgb.r - rgb.g) / delta;\n            }\n        }\n        else {\n            hsb.h = -1;\n        }\n        hsb.h *= 60;\n        if (hsb.h < 0) {\n            hsb.h += 360;\n        }\n        hsb.s *= 100 / 255;\n        hsb.b *= 100 / 255;\n        return hsb;\n    }\n    HSBtoRGB(hsb) {\n        var rgb = {\n            r: 0,\n            g: 0,\n            b: 0\n        };\n        let h = hsb.h;\n        let s = (hsb.s * 255) / 100;\n        let v = (hsb.b * 255) / 100;\n        if (s == 0) {\n            rgb = {\n                r: v,\n                g: v,\n                b: v\n            };\n        }\n        else {\n            let t1 = v;\n            let t2 = ((255 - s) * v) / 255;\n            let t3 = ((t1 - t2) * (h % 60)) / 60;\n            if (h == 360)\n                h = 0;\n            if (h < 60) {\n                rgb.r = t1;\n                rgb.b = t2;\n                rgb.g = t2 + t3;\n            }\n            else if (h < 120) {\n                rgb.g = t1;\n                rgb.b = t2;\n                rgb.r = t1 - t3;\n            }\n            else if (h < 180) {\n                rgb.g = t1;\n                rgb.r = t2;\n                rgb.b = t2 + t3;\n            }\n            else if (h < 240) {\n                rgb.b = t1;\n                rgb.r = t2;\n                rgb.g = t1 - t3;\n            }\n            else if (h < 300) {\n                rgb.b = t1;\n                rgb.g = t2;\n                rgb.r = t2 + t3;\n            }\n            else if (h < 360) {\n                rgb.r = t1;\n                rgb.g = t2;\n                rgb.b = t1 - t3;\n            }\n            else {\n                rgb.r = 0;\n                rgb.g = 0;\n                rgb.b = 0;\n            }\n        }\n        return { r: Math.round(rgb.r), g: Math.round(rgb.g), b: Math.round(rgb.b) };\n    }\n    RGBtoHEX(rgb) {\n        var hex = [rgb.r.toString(16), rgb.g.toString(16), rgb.b.toString(16)];\n        for (var key in hex) {\n            if (hex[key].length == 1) {\n                hex[key] = '0' + hex[key];\n            }\n        }\n        return hex.join('');\n    }\n    HSBtoHEX(hsb) {\n        return this.RGBtoHEX(this.HSBtoRGB(hsb));\n    }\n    onOverlayHide() {\n        this.unbindScrollListener();\n        this.unbindDocumentResizeListener();\n        this.unbindDocumentClickListener();\n        this.overlay = null;\n    }\n    ngOnDestroy() {\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n        if (this.overlay && this.autoZIndex) {\n            ZIndexUtils.clear(this.overlay);\n        }\n        this.restoreOverlayAppend();\n        this.onOverlayHide();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: ColorPicker, deps: [{ token: DOCUMENT }, { token: PLATFORM_ID }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: i1.PrimeNGConfig }, { token: i1.OverlayService }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.5\", type: ColorPicker, selector: \"p-colorPicker\", inputs: { style: \"style\", styleClass: \"styleClass\", inline: \"inline\", format: \"format\", appendTo: \"appendTo\", disabled: \"disabled\", tabindex: \"tabindex\", inputId: \"inputId\", autoZIndex: \"autoZIndex\", baseZIndex: \"baseZIndex\", showTransitionOptions: \"showTransitionOptions\", hideTransitionOptions: \"hideTransitionOptions\" }, outputs: { onChange: \"onChange\", onShow: \"onShow\", onHide: \"onHide\" }, host: { classAttribute: \"p-element\" }, providers: [COLORPICKER_VALUE_ACCESSOR], viewQueries: [{ propertyName: \"containerViewChild\", first: true, predicate: [\"container\"], descendants: true }, { propertyName: \"inputViewChild\", first: true, predicate: [\"input\"], descendants: true }, { propertyName: \"colorSelector\", first: true, predicate: [\"colorSelector\"], descendants: true }, { propertyName: \"colorHandle\", first: true, predicate: [\"colorHandle\"], descendants: true }, { propertyName: \"hue\", first: true, predicate: [\"hue\"], descendants: true }, { propertyName: \"hueHandle\", first: true, predicate: [\"hueHandle\"], descendants: true }], ngImport: i0, template: `\n        <div\n            #container\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n            [ngClass]=\"{ 'p-colorpicker p-component': true, 'p-colorpicker-overlay': !inline, 'p-colorpicker-dragging': colorDragging || hueDragging }\"\n            [attr.data-pc-name]=\"'colorpicker'\"\n            [attr.data-pc-section]=\"'root'\"\n        >\n            <input\n                *ngIf=\"!inline\"\n                #input\n                type=\"text\"\n                class=\"p-colorpicker-preview p-inputtext\"\n                [ngClass]=\"{ 'p-disabled': disabled }\"\n                readonly=\"readonly\"\n                [attr.tabindex]=\"tabindex\"\n                [disabled]=\"disabled\"\n                (click)=\"onInputClick()\"\n                (keydown)=\"onInputKeydown($event)\"\n                (focus)=\"onInputFocus()\"\n                [attr.id]=\"inputId\"\n                [style.backgroundColor]=\"inputBgColor\"\n                [attr.data-pc-section]=\"'input'\"\n            />\n            <div\n                *ngIf=\"inline || overlayVisible\"\n                [ngClass]=\"{ 'p-colorpicker-panel': true, 'p-colorpicker-overlay-panel': !inline, 'p-disabled': disabled }\"\n                (click)=\"onOverlayClick($event)\"\n                [@overlayAnimation]=\"{ value: 'visible', params: { showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions } }\"\n                [@.disabled]=\"inline === true\"\n                (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\"\n                (@overlayAnimation.done)=\"onOverlayAnimationEnd($event)\"\n                [attr.data-pc-section]=\"'panel'\"\n            >\n                <div class=\"p-colorpicker-content\" [attr.data-pc-section]=\"'content'\">\n                    <div #colorSelector class=\"p-colorpicker-color-selector\" (touchstart)=\"onColorDragStart($event)\" (touchmove)=\"onDrag($event)\" (touchend)=\"onDragEnd()\" (mousedown)=\"onColorMousedown($event)\" [attr.data-pc-section]=\"'selector'\">\n                        <div class=\"p-colorpicker-color\" [attr.data-pc-section]=\"'color'\">\n                            <div #colorHandle class=\"p-colorpicker-color-handle\" [attr.data-pc-section]=\"'colorHandle'\"></div>\n                        </div>\n                    </div>\n                    <div #hue class=\"p-colorpicker-hue\" (mousedown)=\"onHueMousedown($event)\" (touchstart)=\"onHueDragStart($event)\" (touchmove)=\"onDrag($event)\" (touchend)=\"onDragEnd()\" [attr.data-pc-section]=\"'hue'\">\n                        <div #hueHandle class=\"p-colorpicker-hue-handle\" [attr.data-pc-section]=\"'hueHandle'\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `, isInline: true, styles: [\"@layer primeng{.p-colorpicker{display:inline-block}.p-colorpicker-dragging{cursor:pointer}.p-colorpicker-overlay{position:relative}.p-colorpicker-panel{position:relative;width:193px;height:166px}.p-colorpicker-overlay-panel{position:absolute;top:0;left:0}.p-colorpicker-preview{cursor:pointer}.p-colorpicker-panel .p-colorpicker-content{position:relative}.p-colorpicker-panel .p-colorpicker-color-selector{width:150px;height:150px;top:8px;left:8px;position:absolute}.p-colorpicker-panel .p-colorpicker-color{width:150px;height:150px}.p-colorpicker-panel .p-colorpicker-color-handle{position:absolute;top:0;left:150px;border-radius:100%;width:10px;height:10px;border-width:1px;border-style:solid;margin:-5px 0 0 -5px;cursor:pointer;opacity:.85}.p-colorpicker-panel .p-colorpicker-hue{width:17px;height:150px;top:8px;left:167px;position:absolute;opacity:.85}.p-colorpicker-panel .p-colorpicker-hue-handle{position:absolute;top:150px;left:0;width:21px;margin-left:-2px;margin-top:-5px;height:10px;border-width:2px;border-style:solid;opacity:.85;cursor:pointer}}\\n\"], dependencies: [{ kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], animations: [trigger('overlayAnimation', [transition(':enter', [style({ opacity: 0, transform: 'scaleY(0.8)' }), animate('{{showTransitionParams}}')]), transition(':leave', [animate('{{hideTransitionParams}}', style({ opacity: 0 }))])])], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: ColorPicker, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-colorPicker', template: `\n        <div\n            #container\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n            [ngClass]=\"{ 'p-colorpicker p-component': true, 'p-colorpicker-overlay': !inline, 'p-colorpicker-dragging': colorDragging || hueDragging }\"\n            [attr.data-pc-name]=\"'colorpicker'\"\n            [attr.data-pc-section]=\"'root'\"\n        >\n            <input\n                *ngIf=\"!inline\"\n                #input\n                type=\"text\"\n                class=\"p-colorpicker-preview p-inputtext\"\n                [ngClass]=\"{ 'p-disabled': disabled }\"\n                readonly=\"readonly\"\n                [attr.tabindex]=\"tabindex\"\n                [disabled]=\"disabled\"\n                (click)=\"onInputClick()\"\n                (keydown)=\"onInputKeydown($event)\"\n                (focus)=\"onInputFocus()\"\n                [attr.id]=\"inputId\"\n                [style.backgroundColor]=\"inputBgColor\"\n                [attr.data-pc-section]=\"'input'\"\n            />\n            <div\n                *ngIf=\"inline || overlayVisible\"\n                [ngClass]=\"{ 'p-colorpicker-panel': true, 'p-colorpicker-overlay-panel': !inline, 'p-disabled': disabled }\"\n                (click)=\"onOverlayClick($event)\"\n                [@overlayAnimation]=\"{ value: 'visible', params: { showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions } }\"\n                [@.disabled]=\"inline === true\"\n                (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\"\n                (@overlayAnimation.done)=\"onOverlayAnimationEnd($event)\"\n                [attr.data-pc-section]=\"'panel'\"\n            >\n                <div class=\"p-colorpicker-content\" [attr.data-pc-section]=\"'content'\">\n                    <div #colorSelector class=\"p-colorpicker-color-selector\" (touchstart)=\"onColorDragStart($event)\" (touchmove)=\"onDrag($event)\" (touchend)=\"onDragEnd()\" (mousedown)=\"onColorMousedown($event)\" [attr.data-pc-section]=\"'selector'\">\n                        <div class=\"p-colorpicker-color\" [attr.data-pc-section]=\"'color'\">\n                            <div #colorHandle class=\"p-colorpicker-color-handle\" [attr.data-pc-section]=\"'colorHandle'\"></div>\n                        </div>\n                    </div>\n                    <div #hue class=\"p-colorpicker-hue\" (mousedown)=\"onHueMousedown($event)\" (touchstart)=\"onHueDragStart($event)\" (touchmove)=\"onDrag($event)\" (touchend)=\"onDragEnd()\" [attr.data-pc-section]=\"'hue'\">\n                        <div #hueHandle class=\"p-colorpicker-hue-handle\" [attr.data-pc-section]=\"'hueHandle'\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `, animations: [trigger('overlayAnimation', [transition(':enter', [style({ opacity: 0, transform: 'scaleY(0.8)' }), animate('{{showTransitionParams}}')]), transition(':leave', [animate('{{hideTransitionParams}}', style({ opacity: 0 }))])])], providers: [COLORPICKER_VALUE_ACCESSOR], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        class: 'p-element'\n                    }, styles: [\"@layer primeng{.p-colorpicker{display:inline-block}.p-colorpicker-dragging{cursor:pointer}.p-colorpicker-overlay{position:relative}.p-colorpicker-panel{position:relative;width:193px;height:166px}.p-colorpicker-overlay-panel{position:absolute;top:0;left:0}.p-colorpicker-preview{cursor:pointer}.p-colorpicker-panel .p-colorpicker-content{position:relative}.p-colorpicker-panel .p-colorpicker-color-selector{width:150px;height:150px;top:8px;left:8px;position:absolute}.p-colorpicker-panel .p-colorpicker-color{width:150px;height:150px}.p-colorpicker-panel .p-colorpicker-color-handle{position:absolute;top:0;left:150px;border-radius:100%;width:10px;height:10px;border-width:1px;border-style:solid;margin:-5px 0 0 -5px;cursor:pointer;opacity:.85}.p-colorpicker-panel .p-colorpicker-hue{width:17px;height:150px;top:8px;left:167px;position:absolute;opacity:.85}.p-colorpicker-panel .p-colorpicker-hue-handle{position:absolute;top:150px;left:0;width:21px;margin-left:-2px;margin-top:-5px;height:10px;border-width:2px;border-style:solid;opacity:.85;cursor:pointer}}\\n\"] }]\n        }], ctorParameters: () => [{ type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i1.PrimeNGConfig }, { type: i1.OverlayService }], propDecorators: { style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], inline: [{\n                type: Input\n            }], format: [{\n                type: Input\n            }], appendTo: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], inputId: [{\n                type: Input\n            }], autoZIndex: [{\n                type: Input\n            }], baseZIndex: [{\n                type: Input\n            }], showTransitionOptions: [{\n                type: Input\n            }], hideTransitionOptions: [{\n                type: Input\n            }], onChange: [{\n                type: Output\n            }], onShow: [{\n                type: Output\n            }], onHide: [{\n                type: Output\n            }], containerViewChild: [{\n                type: ViewChild,\n                args: ['container']\n            }], inputViewChild: [{\n                type: ViewChild,\n                args: ['input']\n            }], colorSelector: [{\n                type: ViewChild,\n                args: ['colorSelector']\n            }], colorHandle: [{\n                type: ViewChild,\n                args: ['colorHandle']\n            }], hue: [{\n                type: ViewChild,\n                args: ['hue']\n            }], hueHandle: [{\n                type: ViewChild,\n                args: ['hueHandle']\n            }] } });\nclass ColorPickerModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: ColorPickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.5\", ngImport: i0, type: ColorPickerModule, declarations: [ColorPicker], imports: [CommonModule], exports: [ColorPicker] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: ColorPickerModule, imports: [CommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: ColorPickerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    exports: [ColorPicker],\n                    declarations: [ColorPicker]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { COLORPICKER_VALUE_ACCESSOR, ColorPicker, ColorPickerModule };\n","import * as i1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nconst KNOB_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => Knob),\n    multi: true\n};\n/**\n * Knob is a form component to define number inputs with a dial.\n * @group Components\n */\nclass Knob {\n    document;\n    renderer;\n    cd;\n    el;\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    style;\n    /**\n     * Defines a string that labels the input for accessibility.\n     * @group Props\n     */\n    ariaLabel;\n    /**\n     * Specifies one or more IDs in the DOM that labels the input field.\n     * @group Props\n     */\n    ariaLabelledBy;\n    /**\n     * Index of the element in tabbing order.\n     * @group Props\n     */\n    tabindex = 0;\n    /**\n     * Background of the value.\n     * @group Props\n     */\n    valueColor = 'var(--primary-color, Black)';\n    /**\n     * Background color of the range.\n     * @group Props\n     */\n    rangeColor = 'var(--surface-border, LightGray)';\n    /**\n     * Color of the value text.\n     * @group Props\n     */\n    textColor = 'var(--text-color-secondary, Black)';\n    /**\n     * Template string of the value.\n     * @group Props\n     */\n    valueTemplate = '{value}';\n    /**\n     * Name of the input element.\n     * @group Props\n     */\n    name;\n    /**\n     * Size of the component in pixels.\n     * @group Props\n     */\n    size = 100;\n    /**\n     * Step factor to increment/decrement the value.\n     * @group Props\n     */\n    step = 1;\n    /**\n     * Mininum boundary value.\n     * @group Props\n     */\n    min = 0;\n    /**\n     * Maximum boundary value.\n     * @group Props\n     */\n    max = 100;\n    /**\n     * Width of the knob stroke.\n     * @group Props\n     */\n    strokeWidth = 14;\n    /**\n     * When present, it specifies that the component should be disabled.\n     * @group Props\n     */\n    disabled;\n    /**\n     * Whether the show the value inside the knob.\n     * @group Props\n     */\n    showValue = true;\n    /**\n     * When present, it specifies that the component value cannot be edited.\n     * @group Props\n     */\n    readonly = false;\n    /**\n     * Callback to invoke on value change.\n     * @param {number} value - New value.\n     * @group Emits\n     */\n    onChange = new EventEmitter();\n    radius = 40;\n    midX = 50;\n    midY = 50;\n    minRadians = (4 * Math.PI) / 3;\n    maxRadians = -Math.PI / 3;\n    value = 0;\n    windowMouseMoveListener;\n    windowMouseUpListener;\n    windowTouchMoveListener;\n    windowTouchEndListener;\n    onModelChange = () => { };\n    onModelTouched = () => { };\n    constructor(document, renderer, cd, el) {\n        this.document = document;\n        this.renderer = renderer;\n        this.cd = cd;\n        this.el = el;\n    }\n    mapRange(x, inMin, inMax, outMin, outMax) {\n        return ((x - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin;\n    }\n    onClick(event) {\n        if (!this.disabled && !this.readonly) {\n            this.updateValue(event.offsetX, event.offsetY);\n        }\n    }\n    updateValue(offsetX, offsetY) {\n        let dx = offsetX - this.size / 2;\n        let dy = this.size / 2 - offsetY;\n        let angle = Math.atan2(dy, dx);\n        let start = -Math.PI / 2 - Math.PI / 6;\n        this.updateModel(angle, start);\n    }\n    updateModel(angle, start) {\n        let mappedValue;\n        if (angle > this.maxRadians)\n            mappedValue = this.mapRange(angle, this.minRadians, this.maxRadians, this.min, this.max);\n        else if (angle < start)\n            mappedValue = this.mapRange(angle + 2 * Math.PI, this.minRadians, this.maxRadians, this.min, this.max);\n        else\n            return;\n        let newValue = Math.round((mappedValue - this.min) / this.step) * this.step + this.min;\n        this.value = newValue;\n        this.onModelChange(this.value);\n        this.onChange.emit(this.value);\n    }\n    onMouseDown(event) {\n        if (!this.disabled && !this.readonly) {\n            const window = this.document.defaultView || 'window';\n            this.windowMouseMoveListener = this.renderer.listen(window, 'mousemove', this.onMouseMove.bind(this));\n            this.windowMouseUpListener = this.renderer.listen(window, 'mouseup', this.onMouseUp.bind(this));\n            event.preventDefault();\n        }\n    }\n    onMouseUp(event) {\n        if (!this.disabled && !this.readonly) {\n            if (this.windowMouseMoveListener) {\n                this.windowMouseMoveListener();\n                this.windowMouseUpListener = null;\n            }\n            if (this.windowMouseUpListener) {\n                this.windowMouseUpListener();\n                this.windowMouseMoveListener = null;\n            }\n            event.preventDefault();\n        }\n    }\n    onTouchStart(event) {\n        if (!this.disabled && !this.readonly) {\n            const window = this.document.defaultView || 'window';\n            this.windowTouchMoveListener = this.renderer.listen(window, 'touchmove', this.onTouchMove.bind(this));\n            this.windowTouchEndListener = this.renderer.listen(window, 'touchend', this.onTouchEnd.bind(this));\n            event.preventDefault();\n        }\n    }\n    onTouchEnd(event) {\n        if (!this.disabled && !this.readonly) {\n            if (this.windowTouchMoveListener) {\n                this.windowTouchMoveListener();\n            }\n            if (this.windowTouchEndListener) {\n                this.windowTouchEndListener();\n            }\n            this.windowTouchMoveListener = null;\n            this.windowTouchEndListener = null;\n            event.preventDefault();\n        }\n    }\n    onMouseMove(event) {\n        if (!this.disabled && !this.readonly) {\n            this.updateValue(event.offsetX, event.offsetY);\n            event.preventDefault();\n        }\n    }\n    onTouchMove(event) {\n        if (!this.disabled && !this.readonly && event instanceof TouchEvent && event.touches.length === 1) {\n            const rect = this.el.nativeElement.children[0].getBoundingClientRect();\n            const touch = event.targetTouches.item(0);\n            if (touch) {\n                const offsetX = touch.clientX - rect.left;\n                const offsetY = touch.clientY - rect.top;\n                this.updateValue(offsetX, offsetY);\n            }\n        }\n    }\n    updateModelValue(newValue) {\n        if (newValue > this.max)\n            this.value = this.max;\n        else if (newValue < this.min)\n            this.value = this.min;\n        else\n            this.value = newValue;\n        this.onModelChange(this.value);\n        this.onChange.emit(this.value);\n    }\n    onKeyDown(event) {\n        if (!this.disabled && !this.readonly) {\n            switch (event.code) {\n                case 'ArrowRight':\n                case 'ArrowUp': {\n                    event.preventDefault();\n                    this.updateModelValue(this._value + 1);\n                    break;\n                }\n                case 'ArrowLeft':\n                case 'ArrowDown': {\n                    event.preventDefault();\n                    this.updateModelValue(this._value - 1);\n                    break;\n                }\n                case 'Home': {\n                    event.preventDefault();\n                    this.updateModelValue(this.min);\n                    break;\n                }\n                case 'End': {\n                    event.preventDefault();\n                    this.updateModelValue(this.max);\n                    break;\n                }\n                case 'PageUp': {\n                    event.preventDefault();\n                    this.updateModelValue(this._value + 10);\n                    break;\n                }\n                case 'PageDown': {\n                    event.preventDefault();\n                    this.updateModelValue(this._value - 10);\n                    break;\n                }\n            }\n        }\n    }\n    writeValue(value) {\n        this.value = value;\n        this.cd.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n    containerClass() {\n        return {\n            'p-knob p-component': true,\n            'p-disabled': this.disabled\n        };\n    }\n    rangePath() {\n        return `M ${this.minX()} ${this.minY()} A ${this.radius} ${this.radius} 0 1 1 ${this.maxX()} ${this.maxY()}`;\n    }\n    valuePath() {\n        return `M ${this.zeroX()} ${this.zeroY()} A ${this.radius} ${this.radius} 0 ${this.largeArc()} ${this.sweep()} ${this.valueX()} ${this.valueY()}`;\n    }\n    zeroRadians() {\n        if (this.min > 0 && this.max > 0)\n            return this.mapRange(this.min, this.min, this.max, this.minRadians, this.maxRadians);\n        else\n            return this.mapRange(0, this.min, this.max, this.minRadians, this.maxRadians);\n    }\n    valueRadians() {\n        return this.mapRange(this._value, this.min, this.max, this.minRadians, this.maxRadians);\n    }\n    minX() {\n        return this.midX + Math.cos(this.minRadians) * this.radius;\n    }\n    minY() {\n        return this.midY - Math.sin(this.minRadians) * this.radius;\n    }\n    maxX() {\n        return this.midX + Math.cos(this.maxRadians) * this.radius;\n    }\n    maxY() {\n        return this.midY - Math.sin(this.maxRadians) * this.radius;\n    }\n    zeroX() {\n        return this.midX + Math.cos(this.zeroRadians()) * this.radius;\n    }\n    zeroY() {\n        return this.midY - Math.sin(this.zeroRadians()) * this.radius;\n    }\n    valueX() {\n        return this.midX + Math.cos(this.valueRadians()) * this.radius;\n    }\n    valueY() {\n        return this.midY - Math.sin(this.valueRadians()) * this.radius;\n    }\n    largeArc() {\n        return Math.abs(this.zeroRadians() - this.valueRadians()) < Math.PI ? 0 : 1;\n    }\n    sweep() {\n        return this.valueRadians() > this.zeroRadians() ? 0 : 1;\n    }\n    valueToDisplay() {\n        return this.valueTemplate.replace('{value}', this._value.toString());\n    }\n    get _value() {\n        return this.value != null ? this.value : this.min;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: Knob, deps: [{ token: DOCUMENT }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.5\", type: Knob, selector: \"p-knob\", inputs: { styleClass: \"styleClass\", style: \"style\", ariaLabel: \"ariaLabel\", ariaLabelledBy: \"ariaLabelledBy\", tabindex: \"tabindex\", valueColor: \"valueColor\", rangeColor: \"rangeColor\", textColor: \"textColor\", valueTemplate: \"valueTemplate\", name: \"name\", size: \"size\", step: \"step\", min: \"min\", max: \"max\", strokeWidth: \"strokeWidth\", disabled: \"disabled\", showValue: \"showValue\", readonly: \"readonly\" }, outputs: { onChange: \"onChange\" }, host: { classAttribute: \"p-element\" }, providers: [KNOB_VALUE_ACCESSOR], ngImport: i0, template: `\n        <div [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\" [attr.data-pc-name]=\"'knob'\" [attr.data-pc-section]=\"'root'\">\n            <svg\n                viewBox=\"0 0 100 100\"\n                role=\"slider\"\n                [style.width]=\"size + 'px'\"\n                [style.height]=\"size + 'px'\"\n                (click)=\"onClick($event)\"\n                (keydown)=\"onKeyDown($event)\"\n                (mousedown)=\"onMouseDown($event)\"\n                (mouseup)=\"onMouseUp($event)\"\n                (touchstart)=\"onTouchStart($event)\"\n                (touchend)=\"onTouchEnd($event)\"\n                [attr.aria-valuemin]=\"min\"\n                [attr.aria-valuemax]=\"max\"\n                [attr.aria-valuenow]=\"_value\"\n                [attr.aria-labelledby]=\"ariaLabelledBy\"\n                [attr.aria-label]=\"ariaLabel\"\n                [attr.tabindex]=\"readonly || disabled ? -1 : tabindex\"\n                [attr.data-pc-section]=\"'svg'\"\n            >\n                <path [attr.d]=\"rangePath()\" [attr.stroke-width]=\"strokeWidth\" [attr.stroke]=\"rangeColor\" class=\"p-knob-range\"></path>\n                <path [attr.d]=\"valuePath()\" [attr.stroke-width]=\"strokeWidth\" [attr.stroke]=\"valueColor\" class=\"p-knob-value\"></path>\n                <text *ngIf=\"showValue\" [attr.x]=\"50\" [attr.y]=\"57\" text-anchor=\"middle\" [attr.fill]=\"textColor\" class=\"p-knob-text\" [attr.name]=\"name\">{{ valueToDisplay() }}</text>\n            </svg>\n        </div>\n    `, isInline: true, styles: [\"@keyframes dash-frame{to{stroke-dashoffset:0}}@layer primeng{.p-knob-range{fill:none;transition:stroke .1s ease-in}.p-knob-value{animation-name:dash-frame;animation-fill-mode:forwards;fill:none}.p-knob-text{font-size:1.3rem;text-align:center}}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: Knob, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-knob', template: `\n        <div [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\" [attr.data-pc-name]=\"'knob'\" [attr.data-pc-section]=\"'root'\">\n            <svg\n                viewBox=\"0 0 100 100\"\n                role=\"slider\"\n                [style.width]=\"size + 'px'\"\n                [style.height]=\"size + 'px'\"\n                (click)=\"onClick($event)\"\n                (keydown)=\"onKeyDown($event)\"\n                (mousedown)=\"onMouseDown($event)\"\n                (mouseup)=\"onMouseUp($event)\"\n                (touchstart)=\"onTouchStart($event)\"\n                (touchend)=\"onTouchEnd($event)\"\n                [attr.aria-valuemin]=\"min\"\n                [attr.aria-valuemax]=\"max\"\n                [attr.aria-valuenow]=\"_value\"\n                [attr.aria-labelledby]=\"ariaLabelledBy\"\n                [attr.aria-label]=\"ariaLabel\"\n                [attr.tabindex]=\"readonly || disabled ? -1 : tabindex\"\n                [attr.data-pc-section]=\"'svg'\"\n            >\n                <path [attr.d]=\"rangePath()\" [attr.stroke-width]=\"strokeWidth\" [attr.stroke]=\"rangeColor\" class=\"p-knob-range\"></path>\n                <path [attr.d]=\"valuePath()\" [attr.stroke-width]=\"strokeWidth\" [attr.stroke]=\"valueColor\" class=\"p-knob-value\"></path>\n                <text *ngIf=\"showValue\" [attr.x]=\"50\" [attr.y]=\"57\" text-anchor=\"middle\" [attr.fill]=\"textColor\" class=\"p-knob-text\" [attr.name]=\"name\">{{ valueToDisplay() }}</text>\n            </svg>\n        </div>\n    `, providers: [KNOB_VALUE_ACCESSOR], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        class: 'p-element'\n                    }, styles: [\"@keyframes dash-frame{to{stroke-dashoffset:0}}@layer primeng{.p-knob-range{fill:none;transition:stroke .1s ease-in}.p-knob-value{animation-name:dash-frame;animation-fill-mode:forwards;fill:none}.p-knob-text{font-size:1.3rem;text-align:center}}\\n\"] }]\n        }], ctorParameters: () => [{ type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }], propDecorators: { styleClass: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], ariaLabelledBy: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], valueColor: [{\n                type: Input\n            }], rangeColor: [{\n                type: Input\n            }], textColor: [{\n                type: Input\n            }], valueTemplate: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], step: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], showValue: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], onChange: [{\n                type: Output\n            }] } });\nclass KnobModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: KnobModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.5\", ngImport: i0, type: KnobModule, declarations: [Knob], imports: [CommonModule], exports: [Knob] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: KnobModule, imports: [CommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: KnobModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    exports: [Knob],\n                    declarations: [Knob]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { KNOB_VALUE_ACCESSOR, Knob, KnobModule };\n","import * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, signal, computed, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from 'primeng/api';\nimport { Header, Footer, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\nimport { ObjectUtils, UniqueComponentId } from 'primeng/utils';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i3 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport { SearchIcon } from 'primeng/icons/search';\nimport { CheckIcon } from 'primeng/icons/check';\nimport * as i4 from 'primeng/scroller';\nimport { ScrollerModule } from 'primeng/scroller';\n\nconst LISTBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => Listbox),\n    multi: true\n};\n/**\n * ListBox is used to select one or more values from a list of items.\n * @group Components\n */\nclass Listbox {\n    el;\n    cd;\n    filterService;\n    config;\n    renderer;\n    /**\n     * Unique identifier of the component.\n     * @group Props\n     */\n    id;\n    /**\n     * Text to display when the search is active. Defaults to global value in i18n translation configuration.\n     * @group Props\n     * @defaultValue '{0} results are available'\n     */\n    searchMessage;\n    /**\n     * Text to display when filtering does not return any results. Defaults to global value in i18n translation configuration.\n     * @group Props\n     * @defaultValue 'No selected item'\n     */\n    emptySelectionMessage;\n    /**\n     * Text to be displayed in hidden accessible field when options are selected. Defaults to global value in i18n translation configuration.\n     * @group Props\n     * @defaultValue '{0} items selected'\n     */\n    selectionMessage;\n    /**\n     * Whether to focus on the first visible or selected element when the overlay panel is shown.\n     * @group Props\n     */\n    autoOptionFocus = true;\n    /**\n     * When enabled, the focused option is selected.\n     * @group Props\n     */\n    selectOnFocus;\n    /**\n     * Locale to use in searching. The default locale is the host environment's current locale.\n     * @group Props\n     */\n    searchLocale;\n    /**\n     * When enabled, the hovered option will be focused.\n     * @group Props\n     */\n    focusOnHover;\n    /**\n     * Text to display when filtering.\n     * @group Props\n     */\n    filterMessage;\n    /**\n     * Fields used when filtering the options, defaults to optionLabel.\n     * @group Props\n     */\n    filterFields;\n    /**\n     * Defines if data is loaded and interacted with in lazy manner.\n     * @group Props\n     */\n    lazy = false;\n    /**\n     * Whether the data should be loaded on demand during scroll.\n     * @group Props\n     */\n    virtualScroll;\n    /**\n     * Height of an item in the list for VirtualScrolling.\n     * @group Props\n     */\n    virtualScrollItemSize;\n    /**\n     * Whether to use the scroller feature. The properties of scroller component can be used like an object in it.\n     * @group Props\n     */\n    virtualScrollOptions;\n    /**\n     * Height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.\n     * @group Props\n     */\n    scrollHeight = '200px';\n    /**\n     * Index of the element in tabbing order.\n     * @group Props\n     */\n    tabindex = 0;\n    /**\n     * When specified, allows selecting multiple values.\n     * @group Props\n     */\n    multiple;\n    /**\n     * Inline style of the container.\n     * @group Props\n     */\n    style;\n    /**\n     * Style class of the container.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Inline style of the list element.\n     * @group Props\n     */\n    listStyle;\n    /**\n     * Style class of the list element.\n     * @group Props\n     */\n    listStyleClass;\n    /**\n     * When present, it specifies that the element value cannot be changed.\n     * @group Props\n     */\n    readonly;\n    /**\n     * When present, it specifies that the element should be disabled.\n     * @group Props\n     */\n    disabled;\n    /**\n     * When specified, allows selecting items with checkboxes.\n     * @group Props\n     */\n    checkbox = false;\n    /**\n     * When specified, displays a filter input at header.\n     * @group Props\n     */\n    filter = false;\n    /**\n     * When filtering is enabled, filterBy decides which field or fields (comma separated) to search against.\n     * @group Props\n     */\n    filterBy;\n    /**\n     * Defines how the items are filtered.\n     * @group Props\n     */\n    filterMatchMode = 'contains';\n    /**\n     * Locale to use in filtering. The default locale is the host environment's current locale.\n     * @group Props\n     */\n    filterLocale;\n    /**\n     * Defines how multiple items can be selected, when true metaKey needs to be pressed to select or unselect an item and when set to false selection of each item can be toggled individually. On touch enabled devices, metaKeySelection is turned off automatically.\n     * @group Props\n     */\n    metaKeySelection = true;\n    /**\n     * A property to uniquely identify a value in options.\n     * @group Props\n     */\n    dataKey;\n    /**\n     * Whether header checkbox is shown in multiple mode.\n     * @group Props\n     */\n    showToggleAll = true;\n    /**\n     * Name of the label field of an option.\n     * @group Props\n     */\n    optionLabel;\n    /**\n     * Name of the value field of an option.\n     * @group Props\n     */\n    optionValue;\n    /**\n     * Name of the options field of an option group.\n     * @group Props\n     */\n    optionGroupChildren = 'items';\n    /**\n     * Name of the label field of an option group.\n     * @group Props\n     */\n    optionGroupLabel = 'label';\n    /**\n     * Name of the disabled field of an option.\n     * @group Props\n     */\n    optionDisabled;\n    /**\n     * Defines a string that labels the filter input.\n     * @group Props\n     */\n    ariaFilterLabel;\n    /**\n     * Defines placeholder of the filter input.\n     * @group Props\n     */\n    filterPlaceHolder;\n    /**\n     * Text to display when filtering does not return any results.\n     * @group Props\n     */\n    emptyFilterMessage;\n    /**\n     * Text to display when there is no data. Defaults to global value in i18n translation configuration.\n     * @group Props\n     */\n    emptyMessage;\n    /**\n     * Whether to display options as grouped when nested options are provided.\n     * @group Props\n     */\n    group;\n    /**\n     * An array of selectitems to display as the available options.\n     * @group Props\n     */\n    get options() {\n        return this._options();\n    }\n    set options(val) {\n        this._options.set(val);\n    }\n    /**\n     * When specified, filter displays with this value.\n     * @group Props\n     */\n    get filterValue() {\n        return this._filterValue();\n    }\n    set filterValue(val) {\n        this._filterValue.set(val);\n    }\n    /**\n     * Whether all data is selected.\n     * @group Props\n     */\n    get selectAll() {\n        return this._selectAll;\n    }\n    set selectAll(value) {\n        this._selectAll = value;\n    }\n    /**\n     * Callback to invoke on value change.\n     * @param {ListboxChangeEvent} event - Custom change event.\n     * @group Emits\n     */\n    onChange = new EventEmitter();\n    /**\n     * Callback to invoke when option is clicked.\n     * @param {ListboxClickEvent} event - Custom click event.\n     * @group Emits\n     */\n    onClick = new EventEmitter();\n    /**\n     * Callback to invoke when option is double clicked.\n     * @param {ListboxDoubleClickEvent} event - Custom double click event.\n     * @group Emits\n     */\n    onDblClick = new EventEmitter();\n    /**\n     * Callback to invoke when data is filtered.\n     * @param {ListboxFilterEvent} event - Custom filter event.\n     * @group Emits\n     */\n    onFilter = new EventEmitter();\n    /**\n     * Callback to invoke when component receives focus.\n     * @param {FocusEvent} event - Focus event.\n     * @group Emits\n     */\n    onFocus = new EventEmitter();\n    /**\n     * Callback to invoke when component loses focus.\n     * @param {FocusEvent} event - Blur event.\n     * @group Emits\n     */\n    onBlur = new EventEmitter();\n    /**\n     * Callback to invoke when all data is selected.\n     * @param {ListboxSelectAllChangeEvent} event - Custom select event.\n     * @group Emits\n     */\n    onSelectAllChange = new EventEmitter();\n    headerCheckboxViewChild;\n    filterViewChild;\n    lastHiddenFocusableElement;\n    firstHiddenFocusableElement;\n    scroller;\n    listViewChild;\n    headerFacet;\n    footerFacet;\n    templates;\n    itemTemplate;\n    groupTemplate;\n    headerTemplate;\n    filterTemplate;\n    footerTemplate;\n    emptyFilterTemplate;\n    emptyTemplate;\n    filterIconTemplate;\n    checkIconTemplate;\n    _filterValue = signal(null);\n    _filteredOptions;\n    filterOptions;\n    filtered;\n    value;\n    onModelChange = () => { };\n    onModelTouched = () => { };\n    optionTouched;\n    focus;\n    headerCheckboxFocus;\n    translationSubscription;\n    focused;\n    get containerClass() {\n        return {\n            'p-listbox p-component': true,\n            'p-focus': this.focused,\n            'p-disabled': this.disabled\n        };\n    }\n    get focusedOptionId() {\n        return this.focusedOptionIndex() !== -1 ? `${this.id}_${this.focusedOptionIndex()}` : null;\n    }\n    get filterResultMessageText() {\n        return ObjectUtils.isNotEmpty(this.visibleOptions()) ? this.filterMessageText.replaceAll('{0}', this.visibleOptions().length) : this.emptyFilterMessageText;\n    }\n    get filterMessageText() {\n        return this.filterMessage || this.config.translation.searchMessage || '';\n    }\n    get searchMessageText() {\n        return this.searchMessage || this.config.translation.searchMessage || '';\n    }\n    get emptyFilterMessageText() {\n        return this.emptyFilterMessage || this.config.translation.emptySearchMessage || this.config.translation.emptyFilterMessage || '';\n    }\n    get selectionMessageText() {\n        return this.selectionMessage || this.config.translation.selectionMessage || '';\n    }\n    get emptySelectionMessageText() {\n        return this.emptySelectionMessage || this.config.translation.emptySelectionMessage || '';\n    }\n    get selectedMessageText() {\n        return this.hasSelectedOption() ? this.selectionMessageText.replaceAll('{0}', this.multiple ? this.modelValue().length : '1') : this.emptySelectionMessageText;\n    }\n    get ariaSetSize() {\n        return this.visibleOptions().filter((option) => !this.isOptionGroup(option)).length;\n    }\n    get virtualScrollerDisabled() {\n        return !this.virtualScroll;\n    }\n    get searchFields() {\n        return this.filterFields || [this.optionLabel];\n    }\n    get toggleAllAriaLabel() {\n        return this.config.translation.aria ? this.config.translation.aria[this.allSelected() ? 'selectAll' : 'unselectAll'] : undefined;\n    }\n    searchValue;\n    searchTimeout;\n    _selectAll = null;\n    _options = signal(null);\n    startRangeIndex = signal(-1);\n    focusedOptionIndex = signal(-1);\n    modelValue = signal(null);\n    visibleOptions = computed(() => {\n        const options = this.group ? this.flatOptions(this._options()) : this._options() || [];\n        return this._filterValue() ? this.filterService.filter(options, this.searchFields, this._filterValue(), this.filterMatchMode, this.filterLocale) : options;\n    });\n    constructor(el, cd, filterService, config, renderer) {\n        this.el = el;\n        this.cd = cd;\n        this.filterService = filterService;\n        this.config = config;\n        this.renderer = renderer;\n    }\n    ngOnInit() {\n        this.id = this.id || UniqueComponentId();\n        this.translationSubscription = this.config.translationObserver.subscribe(() => {\n            this.cd.markForCheck();\n        });\n        this.autoUpdateModel();\n        if (this.filterBy) {\n            this.filterOptions = {\n                filter: (value) => this.onFilterChange(value),\n                reset: () => this.resetFilter()\n            };\n        }\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'item':\n                    this.itemTemplate = item.template;\n                    break;\n                case 'group':\n                    this.groupTemplate = item.template;\n                    break;\n                case 'header':\n                    this.headerTemplate = item.template;\n                    break;\n                case 'filter':\n                    this.filterTemplate = item.template;\n                    break;\n                case 'footer':\n                    this.footerTemplate = item.template;\n                    break;\n                case 'empty':\n                    this.emptyTemplate = item.template;\n                    break;\n                case 'emptyfilter':\n                    this.emptyFilterTemplate = item.template;\n                    break;\n                case 'filtericon':\n                    this.filterIconTemplate = item.template;\n                    break;\n                case 'checkicon':\n                    this.checkIconTemplate = item.template;\n                    break;\n                default:\n                    this.itemTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    writeValue(value) {\n        this.value = value;\n        this.modelValue.set(this.value);\n        this.cd.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n    flatOptions(options) {\n        return (options || []).reduce((result, option, index) => {\n            result.push({ optionGroup: option, group: true, index });\n            const optionGroupChildren = this.getOptionGroupChildren(option);\n            optionGroupChildren && optionGroupChildren.forEach((o) => result.push(o));\n            return result;\n        }, []);\n    }\n    autoUpdateModel() {\n        if (this.selectOnFocus && this.autoOptionFocus && !this.hasSelectedOption() && !this.multiple) {\n            const focusedOptionIndex = this.findFirstFocusedOptionIndex();\n            this.focusedOptionIndex.set(focusedOptionIndex);\n            this.onOptionSelect(null, this.visibleOptions()[this.focusedOptionIndex()]);\n        }\n    }\n    /**\n     * Updates the model value.\n     * @group Method\n     */\n    updateModel(value, event) {\n        this.value = value;\n        this.modelValue.set(value);\n        this.onModelChange(value);\n        this.onChange.emit({ originalEvent: event, value: this.value });\n    }\n    removeOption(option) {\n        return this.modelValue().filter((val) => !ObjectUtils.equals(val, this.getOptionValue(option), this.equalityKey()));\n    }\n    onOptionSelect(event, option, index = -1) {\n        if (this.disabled || this.isOptionDisabled(option)) {\n            return;\n        }\n        event && this.onClick.emit({ originalEvent: event, option, value: this.value });\n        this.multiple ? this.onOptionSelectMultiple(event, option) : this.onOptionSelectSingle(event, option);\n        this.optionTouched = false;\n        index !== -1 && this.focusedOptionIndex.set(index);\n    }\n    onOptionSelectMultiple(event, option) {\n        let selected = this.isSelected(option);\n        let value = null;\n        let metaSelection = this.optionTouched ? false : this.metaKeySelection;\n        if (metaSelection) {\n            let metaKey = event.metaKey || event.ctrlKey;\n            if (selected) {\n                value = metaKey ? this.removeOption(option) : [this.getOptionValue(option)];\n            }\n            else {\n                value = metaKey ? this.modelValue() || [] : [];\n                value = [...value, this.getOptionValue(option)];\n            }\n        }\n        else {\n            value = selected ? this.removeOption(option) : [...(this.modelValue() || []), this.getOptionValue(option)];\n        }\n        this.updateModel(value, event);\n    }\n    onOptionSelectSingle(event, option) {\n        let selected = this.isSelected(option);\n        let valueChanged = false;\n        let value = null;\n        let metaSelection = this.optionTouched ? false : this.metaKeySelection;\n        if (metaSelection) {\n            let metaKey = event.metaKey || event.ctrlKey;\n            if (selected) {\n                if (metaKey) {\n                    value = null;\n                    valueChanged = true;\n                }\n            }\n            else {\n                value = this.getOptionValue(option);\n                valueChanged = true;\n            }\n        }\n        else {\n            value = selected ? null : this.getOptionValue(option);\n            valueChanged = true;\n        }\n        if (valueChanged) {\n            this.updateModel(value, event);\n        }\n    }\n    onOptionSelectRange(event, start = -1, end = -1) {\n        start === -1 && (start = this.findNearestSelectedOptionIndex(end, true));\n        end === -1 && (end = this.findNearestSelectedOptionIndex(start));\n        if (start !== -1 && end !== -1) {\n            const rangeStart = Math.min(start, end);\n            const rangeEnd = Math.max(start, end);\n            const value = this.visibleOptions()\n                .slice(rangeStart, rangeEnd + 1)\n                .filter((option) => this.isValidOption(option))\n                .map((option) => this.getOptionValue(option));\n            this.updateModel(value, event);\n        }\n    }\n    onToggleAll(event) {\n        if (this.disabled || this.readonly) {\n            return;\n        }\n        DomHandler.focus(this.headerCheckboxViewChild.nativeElement);\n        if (this.selectAll !== null) {\n            this.onSelectAllChange.emit({\n                originalEvent: event,\n                checked: !this.allSelected()\n            });\n        }\n        else {\n            const value = this.allSelected()\n                ? []\n                : this.visibleOptions()\n                    .filter((option) => this.isValidOption(option))\n                    .map((option) => this.getOptionValue(option));\n            this.updateModel(value, event);\n            this.onChange.emit({ originalEvent: event, value: this.value });\n        }\n        event.preventDefault();\n        // event.stopPropagation();\n    }\n    allSelected() {\n        return this.selectAll !== null ? this.selectAll : ObjectUtils.isNotEmpty(this.visibleOptions()) && this.visibleOptions().every((option) => this.isOptionGroup(option) || this.isOptionDisabled(option) || this.isSelected(option));\n    }\n    onOptionTouchEnd() {\n        if (this.disabled) {\n            return;\n        }\n        this.optionTouched = true;\n    }\n    onOptionMouseDown(event, index) {\n        this.changeFocusedOptionIndex(event, index);\n    }\n    onOptionMouseEnter(event, index) {\n        if (this.focusOnHover) {\n            this.changeFocusedOptionIndex(event, index);\n        }\n    }\n    onOptionDoubleClick(event, option) {\n        if (this.disabled || this.isOptionDisabled(option) || this.readonly) {\n            return;\n        }\n        this.onDblClick.emit({\n            originalEvent: event,\n            option: option,\n            value: this.value\n        });\n    }\n    onFirstHiddenFocus(event) {\n        DomHandler.focus(this.listViewChild.nativeElement);\n        const firstFocusableEl = DomHandler.getFirstFocusableElement(this.el.nativeElement, ':not([data-p-hidden-focusable=\"true\"])');\n        this.lastHiddenFocusableElement.nativeElement.tabIndex = ObjectUtils.isEmpty(firstFocusableEl) ? '-1' : undefined;\n        this.firstHiddenFocusableElement.nativeElement.tabIndex = -1;\n    }\n    onLastHiddenFocus(event) {\n        const relatedTarget = event.relatedTarget;\n        if (relatedTarget === this.listViewChild.nativeElement) {\n            const firstFocusableEl = DomHandler.getFirstFocusableElement(this.el.nativeElement, ':not(.p-hidden-focusable)');\n            DomHandler.focus(firstFocusableEl);\n            this.firstHiddenFocusableElement.nativeElement.tabIndex = undefined;\n        }\n        else {\n            DomHandler.focus(this.firstHiddenFocusableElement.nativeElement);\n        }\n        this.lastHiddenFocusableElement.nativeElement.tabIndex = -1;\n    }\n    onFocusout(event) {\n        if (!this.el.nativeElement.contains(event.relatedTarget) && this.lastHiddenFocusableElement && this.firstHiddenFocusableElement) {\n            this.firstHiddenFocusableElement.nativeElement.tabIndex = this.lastHiddenFocusableElement.nativeElement.tabIndex = undefined;\n        }\n    }\n    onListFocus(event) {\n        this.focused = true;\n        const focusedOptionIndex = this.focusedOptionIndex() !== -1 ? this.focusedOptionIndex() : this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : -1;\n        this.focusedOptionIndex.set(focusedOptionIndex);\n        this.onFocus.emit(event);\n    }\n    onListBlur(event) {\n        this.focused = false;\n        this.focusedOptionIndex.set(-1);\n        this.startRangeIndex.set(-1);\n        this.searchValue = '';\n    }\n    onHeaderCheckboxFocus(event) {\n        this.headerCheckboxFocus = true;\n    }\n    onHeaderCheckboxBlur() {\n        this.headerCheckboxFocus = false;\n    }\n    onHeaderCheckboxKeyDown(event) {\n        if (this.disabled) {\n            event.preventDefault();\n            return;\n        }\n        switch (event.code) {\n            case 'Space':\n                this.onToggleAll(event);\n                break;\n            case 'Enter':\n                this.onToggleAll(event);\n                break;\n            case 'Tab':\n                this.onHeaderCheckboxTabKeyDown(event);\n                break;\n            default:\n                break;\n        }\n    }\n    onHeaderCheckboxTabKeyDown(event) {\n        DomHandler.focus(this.listViewChild.nativeElement);\n        event.preventDefault();\n    }\n    onFilterChange(event) {\n        let value = event.target.value?.trim();\n        this._filterValue.set(value);\n        this.focusedOptionIndex.set(-1);\n        this.startRangeIndex.set(-1);\n        this.onFilter.emit({ originalEvent: event, filter: this._filterValue() });\n        !this.virtualScrollerDisabled && this.scroller.scrollToIndex(0);\n    }\n    onFilterBlur(event) {\n        this.focusedOptionIndex.set(-1);\n        this.startRangeIndex.set(-1);\n    }\n    onListKeyDown(event) {\n        const metaKey = event.metaKey || event.ctrlKey;\n        switch (event.code) {\n            case 'ArrowDown':\n                this.onArrowDownKey(event);\n                break;\n            case 'ArrowUp':\n                this.onArrowUpKey(event);\n                break;\n            case 'Home':\n                this.onHomeKey(event);\n                break;\n            case 'End':\n                this.onEndKey(event);\n                break;\n            case 'PageDown':\n                this.onPageDownKey(event);\n                break;\n            case 'PageUp':\n                this.onPageUpKey(event);\n                break;\n            case 'Enter':\n            case 'Space':\n                this.onSpaceKey(event);\n                break;\n            case 'Tab':\n                //NOOP\n                break;\n            case 'ShiftLeft':\n            case 'ShiftRight':\n                this.onShiftKey();\n                break;\n            default:\n                if (this.multiple && event.code === 'KeyA' && metaKey) {\n                    const value = this.visibleOptions()\n                        .filter((option) => this.isValidOption(option))\n                        .map((option) => this.getOptionValue(option));\n                    this.updateModel(value, event);\n                    event.preventDefault();\n                    break;\n                }\n                if (!metaKey && ObjectUtils.isPrintableCharacter(event.key)) {\n                    this.searchOptions(event, event.key);\n                    event.preventDefault();\n                }\n                break;\n        }\n    }\n    onFilterKeyDown(event) {\n        switch (event.code) {\n            case 'ArrowDown':\n                this.onArrowDownKey(event);\n                break;\n            case 'ArrowUp':\n                this.onArrowUpKey(event);\n                break;\n            case 'ArrowLeft':\n            case 'ArrowRight':\n                this.onArrowLeftKey(event, true);\n                break;\n            case 'Home':\n                this.onHomeKey(event, true);\n                break;\n            case 'End':\n                this.onEndKey(event, true);\n                break;\n            case 'Enter':\n                this.onEnterKey(event);\n                break;\n            case 'ShiftLeft':\n            case 'ShiftRight':\n                this.onShiftKey();\n                break;\n            default:\n                break;\n        }\n    }\n    onArrowDownKey(event) {\n        const optionIndex = this.focusedOptionIndex() !== -1 ? this.findNextOptionIndex(this.focusedOptionIndex()) : this.findFirstFocusedOptionIndex();\n        if (this.multiple && event.shiftKey) {\n            this.onOptionSelectRange(event, this.startRangeIndex(), optionIndex);\n        }\n        this.changeFocusedOptionIndex(event, optionIndex);\n        event.preventDefault();\n    }\n    onArrowUpKey(event) {\n        const optionIndex = this.focusedOptionIndex() !== -1 ? this.findPrevOptionIndex(this.focusedOptionIndex()) : this.findLastFocusedOptionIndex();\n        if (this.multiple && event.shiftKey) {\n            this.onOptionSelectRange(event, optionIndex, this.startRangeIndex());\n        }\n        this.changeFocusedOptionIndex(event, optionIndex);\n        event.preventDefault();\n    }\n    onArrowLeftKey(event, pressedInInputText = false) {\n        pressedInInputText && this.focusedOptionIndex.set(-1);\n    }\n    onHomeKey(event, pressedInInputText = false) {\n        if (pressedInInputText) {\n            event.currentTarget.setSelectionRange(0, 0);\n            this.focusedOptionIndex.set(-1);\n        }\n        else {\n            let metaKey = event.metaKey || event.ctrlKey;\n            let optionIndex = this.findFirstOptionIndex();\n            if (this.multiple && event.shiftKey && metaKey) {\n                this.onOptionSelectRange(event, optionIndex, this.startRangeIndex());\n            }\n            this.changeFocusedOptionIndex(event, optionIndex);\n        }\n        event.preventDefault();\n    }\n    onEndKey(event, pressedInInputText = false) {\n        if (pressedInInputText) {\n            const target = event.currentTarget;\n            const len = target.value.length;\n            target.setSelectionRange(len, len);\n            this.focusedOptionIndex.set(-1);\n        }\n        else {\n            let metaKey = event.metaKey || event.ctrlKey;\n            let optionIndex = this.findLastOptionIndex();\n            if (this.multiple && event.shiftKey && metaKey) {\n                this.onOptionSelectRange(event, this.startRangeIndex(), optionIndex);\n            }\n            this.changeFocusedOptionIndex(event, optionIndex);\n        }\n        event.preventDefault();\n    }\n    onPageDownKey(event) {\n        this.scrollInView(0);\n        event.preventDefault();\n    }\n    onPageUpKey(event) {\n        this.scrollInView(this.visibleOptions().length - 1);\n        event.preventDefault();\n    }\n    onEnterKey(event) {\n        if (this.focusedOptionIndex() !== -1) {\n            if (this.multiple && event.shiftKey)\n                this.onOptionSelectRange(event, this.focusedOptionIndex());\n            else\n                this.onOptionSelect(event, this.visibleOptions()[this.focusedOptionIndex()]);\n        }\n        event.preventDefault();\n    }\n    onSpaceKey(event) {\n        this.onEnterKey(event);\n    }\n    onShiftKey() {\n        const focusedOptionIndex = this.focusedOptionIndex();\n        this.startRangeIndex.set(focusedOptionIndex);\n    }\n    getOptionGroupChildren(optionGroup) {\n        return this.optionGroupChildren ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren) : optionGroup.items;\n    }\n    getOptionGroupLabel(optionGroup) {\n        return this.optionGroupLabel ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel) : optionGroup && optionGroup.label !== undefined ? optionGroup.label : optionGroup;\n    }\n    getOptionLabel(option) {\n        return this.optionLabel ? ObjectUtils.resolveFieldData(option, this.optionLabel) : option.label != undefined ? option.label : option;\n    }\n    getOptionIndex(index, scrollerOptions) {\n        return this.virtualScrollerDisabled ? index : scrollerOptions && scrollerOptions.getItemOptions(index)['index'];\n    }\n    getOptionValue(option) {\n        return this.optionValue ? ObjectUtils.resolveFieldData(option, this.optionValue) : !this.optionLabel && option && option.value !== undefined ? option.value : option;\n    }\n    getAriaPosInset(index) {\n        return ((this.optionGroupLabel\n            ? index -\n                this.visibleOptions()\n                    .slice(0, index)\n                    .filter((option) => this.isOptionGroup(option)).length\n            : index) + 1);\n    }\n    hasSelectedOption() {\n        return ObjectUtils.isNotEmpty(this.modelValue());\n    }\n    isOptionGroup(option) {\n        return this.optionGroupLabel && option.optionGroup && option.group;\n    }\n    changeFocusedOptionIndex(event, index) {\n        if (this.focusedOptionIndex() !== index) {\n            this.focusedOptionIndex.set(index);\n            this.scrollInView();\n            if (this.selectOnFocus && !this.multiple) {\n                this.onOptionSelect(event, this.visibleOptions()[index]);\n            }\n        }\n    }\n    searchOptions(event, char) {\n        this.searchValue = (this.searchValue || '') + char;\n        let optionIndex = -1;\n        let matched = false;\n        if (this.focusedOptionIndex() !== -1) {\n            optionIndex = this.visibleOptions()\n                .slice(this.focusedOptionIndex())\n                .findIndex((option) => this.isOptionMatched(option));\n            optionIndex =\n                optionIndex === -1\n                    ? this.visibleOptions()\n                        .slice(0, this.focusedOptionIndex())\n                        .findIndex((option) => this.isOptionMatched(option))\n                    : optionIndex + this.focusedOptionIndex();\n        }\n        else {\n            optionIndex = this.visibleOptions().findIndex((option) => this.isOptionMatched(option));\n        }\n        if (optionIndex !== -1) {\n            matched = true;\n        }\n        if (optionIndex === -1 && this.focusedOptionIndex() === -1) {\n            optionIndex = this.findFirstFocusedOptionIndex();\n        }\n        if (optionIndex !== -1) {\n            this.changeFocusedOptionIndex(event, optionIndex);\n        }\n        if (this.searchTimeout) {\n            clearTimeout(this.searchTimeout);\n        }\n        this.searchTimeout = setTimeout(() => {\n            this.searchValue = '';\n            this.searchTimeout = null;\n        }, 500);\n        return matched;\n    }\n    isOptionMatched(option) {\n        return this.isValidOption(option) && this.getOptionLabel(option).toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale));\n    }\n    scrollInView(index = -1) {\n        const id = index !== -1 ? `${this.id}_${index}` : this.focusedOptionId;\n        const element = DomHandler.findSingle(this.listViewChild.nativeElement, `li[id=\"${id}\"]`);\n        if (element) {\n            element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'nearest' });\n        }\n        else if (!this.virtualScrollerDisabled) {\n            this.virtualScroll && this.scroller.scrollToIndex(index !== -1 ? index : this.focusedOptionIndex());\n        }\n    }\n    findFirstOptionIndex() {\n        return this.visibleOptions().findIndex((option) => this.isValidOption(option));\n    }\n    findLastOptionIndex() {\n        return ObjectUtils.findLastIndex(this.visibleOptions(), (option) => this.isValidOption(option));\n    }\n    findFirstFocusedOptionIndex() {\n        const selectedIndex = this.findFirstSelectedOptionIndex();\n        return selectedIndex < 0 ? this.findFirstOptionIndex() : selectedIndex;\n    }\n    findLastFocusedOptionIndex() {\n        const selectedIndex = this.findLastSelectedOptionIndex();\n        return selectedIndex < 0 ? this.findLastOptionIndex() : selectedIndex;\n    }\n    findLastSelectedOptionIndex() {\n        return this.hasSelectedOption() ? ObjectUtils.findLastIndex(this.visibleOptions(), (option) => this.isValidSelectedOption(option)) : -1;\n    }\n    findNextOptionIndex(index) {\n        const matchedOptionIndex = index < this.visibleOptions().length - 1\n            ? this.visibleOptions()\n                .slice(index + 1)\n                .findIndex((option) => this.isValidOption(option))\n            : -1;\n        return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : index;\n    }\n    findNextSelectedOptionIndex(index) {\n        const matchedOptionIndex = this.hasSelectedOption() && index < this.visibleOptions().length - 1\n            ? this.visibleOptions()\n                .slice(index + 1)\n                .findIndex((option) => this.isValidSelectedOption(option))\n            : -1;\n        return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : -1;\n    }\n    findPrevSelectedOptionIndex(index) {\n        const matchedOptionIndex = this.hasSelectedOption() && index > 0 ? ObjectUtils.findLastIndex(this.visibleOptions().slice(0, index), (option) => this.isValidSelectedOption(option)) : -1;\n        return matchedOptionIndex > -1 ? matchedOptionIndex : -1;\n    }\n    findFirstSelectedOptionIndex() {\n        return this.hasSelectedOption() ? this.visibleOptions().findIndex((option) => this.isValidSelectedOption(option)) : -1;\n    }\n    findPrevOptionIndex(index) {\n        const matchedOptionIndex = index > 0 ? ObjectUtils.findLastIndex(this.visibleOptions().slice(0, index), (option) => this.isValidOption(option)) : -1;\n        return matchedOptionIndex > -1 ? matchedOptionIndex : index;\n    }\n    findNearestSelectedOptionIndex(index, firstCheckUp = false) {\n        let matchedOptionIndex = -1;\n        if (this.hasSelectedOption()) {\n            if (firstCheckUp) {\n                matchedOptionIndex = this.findPrevSelectedOptionIndex(index);\n                matchedOptionIndex = matchedOptionIndex === -1 ? this.findNextSelectedOptionIndex(index) : matchedOptionIndex;\n            }\n            else {\n                matchedOptionIndex = this.findNextSelectedOptionIndex(index);\n                matchedOptionIndex = matchedOptionIndex === -1 ? this.findPrevSelectedOptionIndex(index) : matchedOptionIndex;\n            }\n        }\n        return matchedOptionIndex > -1 ? matchedOptionIndex : index;\n    }\n    equalityKey() {\n        return this.optionValue ? null : this.dataKey;\n    }\n    isValidSelectedOption(option) {\n        return this.isValidOption(option) && this.isSelected(option);\n    }\n    isOptionDisabled(option) {\n        return this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : false;\n    }\n    isSelected(option) {\n        const optionValue = this.getOptionValue(option);\n        if (this.multiple)\n            return (this.modelValue() || []).some((value) => ObjectUtils.equals(value, optionValue, this.equalityKey()));\n        else\n            return ObjectUtils.equals(this.modelValue(), optionValue, this.equalityKey());\n    }\n    isValidOption(option) {\n        return option && !(this.isOptionDisabled(option) || this.isOptionGroup(option));\n    }\n    isEmpty() {\n        return !this._options() || (this._options() && this._options().length === 0);\n    }\n    hasFilter() {\n        return this._filterValue() && this._filterValue().trim().length > 0;\n    }\n    resetFilter() {\n        if (this.filterViewChild && this.filterViewChild.nativeElement) {\n            this.filterViewChild.nativeElement.value = '';\n        }\n        this._filterValue.set(null);\n    }\n    ngOnDestroy() {\n        if (this.translationSubscription) {\n            this.translationSubscription.unsubscribe();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: Listbox, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.FilterService }, { token: i1.PrimeNGConfig }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.5\", type: Listbox, selector: \"p-listbox\", inputs: { id: \"id\", searchMessage: \"searchMessage\", emptySelectionMessage: \"emptySelectionMessage\", selectionMessage: \"selectionMessage\", autoOptionFocus: \"autoOptionFocus\", selectOnFocus: \"selectOnFocus\", searchLocale: \"searchLocale\", focusOnHover: \"focusOnHover\", filterMessage: \"filterMessage\", filterFields: \"filterFields\", lazy: \"lazy\", virtualScroll: \"virtualScroll\", virtualScrollItemSize: \"virtualScrollItemSize\", virtualScrollOptions: \"virtualScrollOptions\", scrollHeight: \"scrollHeight\", tabindex: \"tabindex\", multiple: \"multiple\", style: \"style\", styleClass: \"styleClass\", listStyle: \"listStyle\", listStyleClass: \"listStyleClass\", readonly: \"readonly\", disabled: \"disabled\", checkbox: \"checkbox\", filter: \"filter\", filterBy: \"filterBy\", filterMatchMode: \"filterMatchMode\", filterLocale: \"filterLocale\", metaKeySelection: \"metaKeySelection\", dataKey: \"dataKey\", showToggleAll: \"showToggleAll\", optionLabel: \"optionLabel\", optionValue: \"optionValue\", optionGroupChildren: \"optionGroupChildren\", optionGroupLabel: \"optionGroupLabel\", optionDisabled: \"optionDisabled\", ariaFilterLabel: \"ariaFilterLabel\", filterPlaceHolder: \"filterPlaceHolder\", emptyFilterMessage: \"emptyFilterMessage\", emptyMessage: \"emptyMessage\", group: \"group\", options: \"options\", filterValue: \"filterValue\", selectAll: \"selectAll\" }, outputs: { onChange: \"onChange\", onClick: \"onClick\", onDblClick: \"onDblClick\", onFilter: \"onFilter\", onFocus: \"onFocus\", onBlur: \"onBlur\", onSelectAllChange: \"onSelectAllChange\" }, host: { classAttribute: \"p-element\" }, providers: [LISTBOX_VALUE_ACCESSOR], queries: [{ propertyName: \"headerFacet\", first: true, predicate: Header, descendants: true }, { propertyName: \"footerFacet\", first: true, predicate: Footer, descendants: true }, { propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"headerCheckboxViewChild\", first: true, predicate: [\"headerchkbox\"], descendants: true }, { propertyName: \"filterViewChild\", first: true, predicate: [\"filter\"], descendants: true }, { propertyName: \"lastHiddenFocusableElement\", first: true, predicate: [\"lastHiddenFocusableElement\"], descendants: true }, { propertyName: \"firstHiddenFocusableElement\", first: true, predicate: [\"firstHiddenFocusableElement\"], descendants: true }, { propertyName: \"scroller\", first: true, predicate: [\"scroller\"], descendants: true }, { propertyName: \"listViewChild\", first: true, predicate: [\"list\"], descendants: true }], ngImport: i0, template: `\n        <div [attr.id]=\"id\" [ngClass]=\"containerClass\" [ngStyle]=\"style\" [class]=\"styleClass\" (focusout)=\"onFocusout($event)\">\n            <span\n                #firstHiddenFocusableElement\n                role=\"presentation\"\n                [attr.aria-hidden]=\"true\"\n                class=\"p-hidden-accessible p-hidden-focusable\"\n                [tabindex]=\"!disabled ? tabindex : -1\"\n                (focus)=\"onFirstHiddenFocus($event)\"\n                [attr.data-p-hidden-focusable]=\"true\"\n            >\n            </span>\n            <div class=\"p-listbox-header\" *ngIf=\"headerFacet || headerTemplate\">\n                <ng-content select=\"p-header\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"headerTemplate; context: { $implicit: modelValue(), options: visibleOptions() }\"></ng-container>\n            </div>\n            <div class=\"p-listbox-header\" *ngIf=\"(checkbox && multiple && showToggleAll) || filter\">\n                <div *ngIf=\"checkbox && multiple && showToggleAll\" class=\"p-checkbox p-component\" [ngClass]=\"{ 'p-checkbox-disabled': disabled || toggleAllDisabled }\" (click)=\"onToggleAll($event)\" (keydown)=\"onHeaderCheckboxKeyDown($event)\">\n                    <div class=\"p-hidden-accessible\" [attr.data-p-hidden-accessible]=\"true\">\n                        <input\n                            #headerchkbox\n                            type=\"checkbox\"\n                            readonly=\"readonly\"\n                            [attr.checked]=\"allSelected()\"\n                            [disabled]=\"disabled || toggleAllDisabled\"\n                            (focus)=\"onHeaderCheckboxFocus($event)\"\n                            (blur)=\"onHeaderCheckboxBlur($event)\"\n                            [attr.aria-label]=\"toggleAllAriaLabel\"\n                        />\n                    </div>\n                    <div class=\"p-checkbox-box\" role=\"checkbox\" [attr.aria-checked]=\"allSelected()\" [ngClass]=\"{ 'p-highlight': allSelected(), 'p-focus': headerCheckboxFocus, 'p-disabled': disabled || toggleAllDisabled }\">\n                        <ng-container *ngIf=\"allSelected()\">\n                            <CheckIcon [styleClass]=\"'p-checkbox-icon'\" *ngIf=\"!checkIconTemplate\" [attr.aria-hidden]=\"true\" />\n                            <span *ngIf=\"checkIconTemplate\" class=\"p-checkbox-icon\" [attr.aria-hidden]=\"true\">\n                                <ng-template *ngTemplateOutlet=\"checkIconTemplate\"></ng-template>\n                            </span>\n                        </ng-container>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"filterTemplate; else builtInFilterElement\">\n                    <ng-container *ngTemplateOutlet=\"filterTemplate; context: { options: filterOptions }\"></ng-container>\n                </ng-container>\n                <ng-template #builtInFilterElement>\n                    <div class=\"p-listbox-filter-container\" *ngIf=\"filter\">\n                        <input\n                            #filterInput\n                            type=\"text\"\n                            class=\"p-listbox-filter p-inputtext p-component\"\n                            role=\"searchbox\"\n                            [value]=\"_filterValue() || ''\"\n                            [disabled]=\"disabled\"\n                            [attr.aria-owns]=\"id + '_list'\"\n                            [attr.aria-activedescendant]=\"focusedOptionId\"\n                            [attr.placeholder]=\"filterPlaceHolder\"\n                            [attr.aria-label]=\"ariaFilterLabel\"\n                            [tabindex]=\"!disabled && !focused ? tabindex : -1\"\n                            (input)=\"onFilterChange($event)\"\n                            (keydown)=\"onFilterKeyDown($event)\"\n                            (blur)=\"onFilterBlur($event)\"\n                        />\n                        <SearchIcon *ngIf=\"!filterIconTemplate\" [styleClass]=\"'p-listbox-filter-icon'\" [attr.aria-hidden]=\"true\" />\n                        <span *ngIf=\"filterIconTemplate\" class=\"p-listbox-filter-icon\" [attr.aria-hidden]=\"true\">\n                            <ng-template *ngTemplateOutlet=\"filterIconTemplate\"></ng-template>\n                        </span>\n                    </div>\n                    <span role=\"status\" attr.aria-live=\"polite\" class=\"p-hidden-accessible\" [attr.data-p-hidden-accessible]=\"true\">\n                        {{ filterResultMessageText }}\n                    </span>\n                </ng-template>\n            </div>\n            <div [ngClass]=\"'p-listbox-list-wrapper'\" [ngStyle]=\"listStyle\" [class]=\"listStyleClass\" [style.max-height]=\"virtualScroll ? 'auto' : scrollHeight || 'auto'\">\n                <p-scroller\n                    #scroller\n                    *ngIf=\"virtualScroll\"\n                    [items]=\"visibleOptions()\"\n                    [style]=\"{ height: scrollHeight }\"\n                    [itemSize]=\"virtualScrollItemSize\"\n                    [autoSize]=\"true\"\n                    [tabindex]=\"-1\"\n                    [lazy]=\"lazy\"\n                    [options]=\"virtualScrollOptions\"\n                    (onLazyLoad)=\"onLazyLoad.emit($event)\"\n                >\n                    <ng-template pTemplate=\"content\" let-items let-scrollerOptions=\"options\">\n                        <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: items, options: scrollerOptions }\"></ng-container>\n                    </ng-template>\n                    <ng-container *ngIf=\"loaderTemplate\">\n                        <ng-template pTemplate=\"loader\" let-scrollerOptions=\"options\">\n                            <ng-container *ngTemplateOutlet=\"loaderTemplate; context: { options: scrollerOptions }\"></ng-container>\n                        </ng-template>\n                    </ng-container>\n                </p-scroller>\n                <ng-container *ngIf=\"!virtualScroll\">\n                    <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: visibleOptions(), options: {} }\"></ng-container>\n                </ng-container>\n\n                <ng-template #buildInItems let-items let-scrollerOptions=\"options\">\n                    <ul\n                        #list\n                        class=\"p-listbox-list\"\n                        role=\"listbox\"\n                        [tabindex]=\"-1\"\n                        [attr.aria-multiselectable]=\"true\"\n                        [ngClass]=\"scrollerOptions.contentStyleClass\"\n                        [style]=\"scrollerOptions.contentStyle\"\n                        [attr.aria-activedescendant]=\"focused ? focusedOptionId : undefined\"\n                        [attr.aria-label]=\"ariaLabel\"\n                        [attr.aria-multiselectable]=\"multiple\"\n                        [attr.aria-disabled]=\"disabled\"\n                        (focus)=\"onListFocus($event)\"\n                        (blur)=\"onListBlur($event)\"\n                        (keydown)=\"onListKeyDown($event)\"\n                    >\n                        <ng-template ngFor let-option [ngForOf]=\"items\" let-i=\"index\">\n                            <ng-container *ngIf=\"isOptionGroup(option)\">\n                                <li [attr.id]=\"id + '_' + getOptionIndex(i, scrollerOptions)\" class=\"p-listbox-item-group\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\" role=\"option\">\n                                    <span *ngIf=\"!groupTemplate\">{{ getOptionGroupLabel(option.optionGroup) }}</span>\n                                    <ng-container *ngTemplateOutlet=\"groupTemplate; context: { $implicit: option.optionGroup }\"></ng-container>\n                                </li>\n                            </ng-container>\n                            <ng-container *ngIf=\"!isOptionGroup(option)\">\n                                <li\n                                    pRipple\n                                    class=\"p-listbox-item\"\n                                    role=\"option\"\n                                    [attr.id]=\"id + '_' + getOptionIndex(i, scrollerOptions)\"\n                                    [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\"\n                                    [ngClass]=\"{ 'p-listbox-item': true, 'p-highlight': isSelected(option), 'p-focus': focusedOptionIndex() === getOptionIndex(i, scrollerOptions), 'p-disabled': isOptionDisabled(option) }\"\n                                    [attr.aria-label]=\"getOptionLabel(option)\"\n                                    [attr.aria-selected]=\"isSelected(option)\"\n                                    [attr.aria-disabled]=\"isOptionDisabled(option)\"\n                                    [attr.aria-setsize]=\"ariaSetSize\"\n                                    [ariaPosInset]=\"getAriaPosInset(getOptionIndex(i, scrollerOptions))\"\n                                    (click)=\"onOptionSelect($event, option, getOptionIndex(i, scrollerOptions))\"\n                                    (dblclick)=\"onOptionDoubleClick($event, option)\"\n                                    (mousedown)=\"onOptionMouseDown($event, getOptionIndex(i, scrollerOptions))\"\n                                    (mouseenter)=\"onOptionMouseEnter($event, getOptionIndex(i, scrollerOptions))\"\n                                    (touchend)=\"onOptionTouchEnd()\"\n                                >\n                                    <div class=\"p-checkbox p-component\" *ngIf=\"checkbox && multiple\" [ngClass]=\"{ 'p-checkbox-disabled': disabled || isOptionDisabled(option) }\">\n                                        <div class=\"p-checkbox-box\" [ngClass]=\"{ 'p-highlight': isSelected(option) }\">\n                                            <ng-container *ngIf=\"isSelected(option)\">\n                                                <CheckIcon [styleClass]=\"'p-checkbox-icon'\" *ngIf=\"!checkIconTemplate\" [attr.aria-hidden]=\"true\" />\n                                                <span *ngIf=\"checkIconTemplate\" class=\"p-checkbox-icon\" [attr.aria-hidden]=\"true\">\n                                                    <ng-template *ngTemplateOutlet=\"checkIconTemplate\"></ng-template>\n                                                </span>\n                                            </ng-container>\n                                        </div>\n                                    </div>\n                                    <span *ngIf=\"!itemTemplate\">{{ getOptionLabel(option) }}</span>\n                                    <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: option, index: getOptionIndex(i, scrollerOptions) }\"></ng-container>\n                                </li>\n                            </ng-container>\n                        </ng-template>\n                        <li *ngIf=\"hasFilter() && isEmpty()\" class=\"p-listbox-empty-message\" role=\"option\">\n                            <ng-container *ngIf=\"!emptyFilterTemplate && !emptyTemplate; else emptyFilter\">\n                                {{ emptyFilterMessageText }}\n                            </ng-container>\n                            <ng-container #emptyFilter *ngTemplateOutlet=\"emptyFilterTemplate || emptyTemplate\"></ng-container>\n                        </li>\n                        <li *ngIf=\"!hasFilter() && isEmpty()\" class=\"p-listbox-empty-message\" role=\"option\">\n                            <ng-container *ngIf=\"!emptyTemplate; else empty\">\n                                {{ emptyMessage }}\n                            </ng-container>\n                            <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n                        </li>\n                    </ul>\n                </ng-template>\n            </div>\n            <div class=\"p-listbox-footer\" *ngIf=\"footerFacet || footerTemplate\">\n                <ng-content select=\"p-footer\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"footerTemplate; context: { $implicit: modelValue(), options: visibleOptions() }\"></ng-container>\n            </div>\n            <span *ngIf=\"isEmpty()\" role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\">\n                {{ emptyMessage }}\n            </span>\n            <span role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\">\n                {{ selectedMessageText }}\n            </span>\n            <span\n                #lastHiddenFocusableElement\n                role=\"presentation\"\n                [attr.aria-hidden]=\"true\"\n                class=\"p-hidden-accessible p-hidden-focusable\"\n                [tabindex]=\"!disabled ? tabindex : -1\"\n                (focus)=\"onLastHiddenFocus($event)\"\n                [attr.data-p-hidden-focusable]=\"true\"\n            >\n            </span>\n        </div>\n    `, isInline: true, styles: [\"@layer primeng{.p-listbox-list-wrapper{overflow:auto}.p-listbox-list{list-style-type:none;margin:0;padding:0}.p-listbox-item{cursor:pointer;position:relative;overflow:hidden;display:flex;align-items:center;-webkit-user-select:none;user-select:none}.p-listbox-header{display:flex;align-items:center}.p-listbox-filter-container{position:relative;flex:1 1 auto}.p-listbox-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-listbox-filter{width:100%}}\\n\"], dependencies: [{ kind: \"directive\", type: i0.forwardRef(() => i2.NgClass), selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i0.forwardRef(() => i2.NgForOf), selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i0.forwardRef(() => i2.NgIf), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i0.forwardRef(() => i2.NgTemplateOutlet), selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i0.forwardRef(() => i2.NgStyle), selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i0.forwardRef(() => i1.PrimeTemplate), selector: \"[pTemplate]\", inputs: [\"type\", \"pTemplate\"] }, { kind: \"directive\", type: i0.forwardRef(() => i3.Ripple), selector: \"[pRipple]\" }, { kind: \"component\", type: i0.forwardRef(() => i4.Scroller), selector: \"p-scroller\", inputs: [\"id\", \"style\", \"styleClass\", \"tabindex\", \"items\", \"itemSize\", \"scrollHeight\", \"scrollWidth\", \"orientation\", \"step\", \"delay\", \"resizeDelay\", \"appendOnly\", \"inline\", \"lazy\", \"disabled\", \"loaderDisabled\", \"columns\", \"showSpacer\", \"showLoader\", \"numToleratedItems\", \"loading\", \"autoSize\", \"trackBy\", \"options\"], outputs: [\"onLazyLoad\", \"onScroll\", \"onScrollIndexChange\"] }, { kind: \"component\", type: i0.forwardRef(() => SearchIcon), selector: \"SearchIcon\" }, { kind: \"component\", type: i0.forwardRef(() => CheckIcon), selector: \"CheckIcon\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: Listbox, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-listbox', template: `\n        <div [attr.id]=\"id\" [ngClass]=\"containerClass\" [ngStyle]=\"style\" [class]=\"styleClass\" (focusout)=\"onFocusout($event)\">\n            <span\n                #firstHiddenFocusableElement\n                role=\"presentation\"\n                [attr.aria-hidden]=\"true\"\n                class=\"p-hidden-accessible p-hidden-focusable\"\n                [tabindex]=\"!disabled ? tabindex : -1\"\n                (focus)=\"onFirstHiddenFocus($event)\"\n                [attr.data-p-hidden-focusable]=\"true\"\n            >\n            </span>\n            <div class=\"p-listbox-header\" *ngIf=\"headerFacet || headerTemplate\">\n                <ng-content select=\"p-header\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"headerTemplate; context: { $implicit: modelValue(), options: visibleOptions() }\"></ng-container>\n            </div>\n            <div class=\"p-listbox-header\" *ngIf=\"(checkbox && multiple && showToggleAll) || filter\">\n                <div *ngIf=\"checkbox && multiple && showToggleAll\" class=\"p-checkbox p-component\" [ngClass]=\"{ 'p-checkbox-disabled': disabled || toggleAllDisabled }\" (click)=\"onToggleAll($event)\" (keydown)=\"onHeaderCheckboxKeyDown($event)\">\n                    <div class=\"p-hidden-accessible\" [attr.data-p-hidden-accessible]=\"true\">\n                        <input\n                            #headerchkbox\n                            type=\"checkbox\"\n                            readonly=\"readonly\"\n                            [attr.checked]=\"allSelected()\"\n                            [disabled]=\"disabled || toggleAllDisabled\"\n                            (focus)=\"onHeaderCheckboxFocus($event)\"\n                            (blur)=\"onHeaderCheckboxBlur($event)\"\n                            [attr.aria-label]=\"toggleAllAriaLabel\"\n                        />\n                    </div>\n                    <div class=\"p-checkbox-box\" role=\"checkbox\" [attr.aria-checked]=\"allSelected()\" [ngClass]=\"{ 'p-highlight': allSelected(), 'p-focus': headerCheckboxFocus, 'p-disabled': disabled || toggleAllDisabled }\">\n                        <ng-container *ngIf=\"allSelected()\">\n                            <CheckIcon [styleClass]=\"'p-checkbox-icon'\" *ngIf=\"!checkIconTemplate\" [attr.aria-hidden]=\"true\" />\n                            <span *ngIf=\"checkIconTemplate\" class=\"p-checkbox-icon\" [attr.aria-hidden]=\"true\">\n                                <ng-template *ngTemplateOutlet=\"checkIconTemplate\"></ng-template>\n                            </span>\n                        </ng-container>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"filterTemplate; else builtInFilterElement\">\n                    <ng-container *ngTemplateOutlet=\"filterTemplate; context: { options: filterOptions }\"></ng-container>\n                </ng-container>\n                <ng-template #builtInFilterElement>\n                    <div class=\"p-listbox-filter-container\" *ngIf=\"filter\">\n                        <input\n                            #filterInput\n                            type=\"text\"\n                            class=\"p-listbox-filter p-inputtext p-component\"\n                            role=\"searchbox\"\n                            [value]=\"_filterValue() || ''\"\n                            [disabled]=\"disabled\"\n                            [attr.aria-owns]=\"id + '_list'\"\n                            [attr.aria-activedescendant]=\"focusedOptionId\"\n                            [attr.placeholder]=\"filterPlaceHolder\"\n                            [attr.aria-label]=\"ariaFilterLabel\"\n                            [tabindex]=\"!disabled && !focused ? tabindex : -1\"\n                            (input)=\"onFilterChange($event)\"\n                            (keydown)=\"onFilterKeyDown($event)\"\n                            (blur)=\"onFilterBlur($event)\"\n                        />\n                        <SearchIcon *ngIf=\"!filterIconTemplate\" [styleClass]=\"'p-listbox-filter-icon'\" [attr.aria-hidden]=\"true\" />\n                        <span *ngIf=\"filterIconTemplate\" class=\"p-listbox-filter-icon\" [attr.aria-hidden]=\"true\">\n                            <ng-template *ngTemplateOutlet=\"filterIconTemplate\"></ng-template>\n                        </span>\n                    </div>\n                    <span role=\"status\" attr.aria-live=\"polite\" class=\"p-hidden-accessible\" [attr.data-p-hidden-accessible]=\"true\">\n                        {{ filterResultMessageText }}\n                    </span>\n                </ng-template>\n            </div>\n            <div [ngClass]=\"'p-listbox-list-wrapper'\" [ngStyle]=\"listStyle\" [class]=\"listStyleClass\" [style.max-height]=\"virtualScroll ? 'auto' : scrollHeight || 'auto'\">\n                <p-scroller\n                    #scroller\n                    *ngIf=\"virtualScroll\"\n                    [items]=\"visibleOptions()\"\n                    [style]=\"{ height: scrollHeight }\"\n                    [itemSize]=\"virtualScrollItemSize\"\n                    [autoSize]=\"true\"\n                    [tabindex]=\"-1\"\n                    [lazy]=\"lazy\"\n                    [options]=\"virtualScrollOptions\"\n                    (onLazyLoad)=\"onLazyLoad.emit($event)\"\n                >\n                    <ng-template pTemplate=\"content\" let-items let-scrollerOptions=\"options\">\n                        <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: items, options: scrollerOptions }\"></ng-container>\n                    </ng-template>\n                    <ng-container *ngIf=\"loaderTemplate\">\n                        <ng-template pTemplate=\"loader\" let-scrollerOptions=\"options\">\n                            <ng-container *ngTemplateOutlet=\"loaderTemplate; context: { options: scrollerOptions }\"></ng-container>\n                        </ng-template>\n                    </ng-container>\n                </p-scroller>\n                <ng-container *ngIf=\"!virtualScroll\">\n                    <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: visibleOptions(), options: {} }\"></ng-container>\n                </ng-container>\n\n                <ng-template #buildInItems let-items let-scrollerOptions=\"options\">\n                    <ul\n                        #list\n                        class=\"p-listbox-list\"\n                        role=\"listbox\"\n                        [tabindex]=\"-1\"\n                        [attr.aria-multiselectable]=\"true\"\n                        [ngClass]=\"scrollerOptions.contentStyleClass\"\n                        [style]=\"scrollerOptions.contentStyle\"\n                        [attr.aria-activedescendant]=\"focused ? focusedOptionId : undefined\"\n                        [attr.aria-label]=\"ariaLabel\"\n                        [attr.aria-multiselectable]=\"multiple\"\n                        [attr.aria-disabled]=\"disabled\"\n                        (focus)=\"onListFocus($event)\"\n                        (blur)=\"onListBlur($event)\"\n                        (keydown)=\"onListKeyDown($event)\"\n                    >\n                        <ng-template ngFor let-option [ngForOf]=\"items\" let-i=\"index\">\n                            <ng-container *ngIf=\"isOptionGroup(option)\">\n                                <li [attr.id]=\"id + '_' + getOptionIndex(i, scrollerOptions)\" class=\"p-listbox-item-group\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\" role=\"option\">\n                                    <span *ngIf=\"!groupTemplate\">{{ getOptionGroupLabel(option.optionGroup) }}</span>\n                                    <ng-container *ngTemplateOutlet=\"groupTemplate; context: { $implicit: option.optionGroup }\"></ng-container>\n                                </li>\n                            </ng-container>\n                            <ng-container *ngIf=\"!isOptionGroup(option)\">\n                                <li\n                                    pRipple\n                                    class=\"p-listbox-item\"\n                                    role=\"option\"\n                                    [attr.id]=\"id + '_' + getOptionIndex(i, scrollerOptions)\"\n                                    [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\"\n                                    [ngClass]=\"{ 'p-listbox-item': true, 'p-highlight': isSelected(option), 'p-focus': focusedOptionIndex() === getOptionIndex(i, scrollerOptions), 'p-disabled': isOptionDisabled(option) }\"\n                                    [attr.aria-label]=\"getOptionLabel(option)\"\n                                    [attr.aria-selected]=\"isSelected(option)\"\n                                    [attr.aria-disabled]=\"isOptionDisabled(option)\"\n                                    [attr.aria-setsize]=\"ariaSetSize\"\n                                    [ariaPosInset]=\"getAriaPosInset(getOptionIndex(i, scrollerOptions))\"\n                                    (click)=\"onOptionSelect($event, option, getOptionIndex(i, scrollerOptions))\"\n                                    (dblclick)=\"onOptionDoubleClick($event, option)\"\n                                    (mousedown)=\"onOptionMouseDown($event, getOptionIndex(i, scrollerOptions))\"\n                                    (mouseenter)=\"onOptionMouseEnter($event, getOptionIndex(i, scrollerOptions))\"\n                                    (touchend)=\"onOptionTouchEnd()\"\n                                >\n                                    <div class=\"p-checkbox p-component\" *ngIf=\"checkbox && multiple\" [ngClass]=\"{ 'p-checkbox-disabled': disabled || isOptionDisabled(option) }\">\n                                        <div class=\"p-checkbox-box\" [ngClass]=\"{ 'p-highlight': isSelected(option) }\">\n                                            <ng-container *ngIf=\"isSelected(option)\">\n                                                <CheckIcon [styleClass]=\"'p-checkbox-icon'\" *ngIf=\"!checkIconTemplate\" [attr.aria-hidden]=\"true\" />\n                                                <span *ngIf=\"checkIconTemplate\" class=\"p-checkbox-icon\" [attr.aria-hidden]=\"true\">\n                                                    <ng-template *ngTemplateOutlet=\"checkIconTemplate\"></ng-template>\n                                                </span>\n                                            </ng-container>\n                                        </div>\n                                    </div>\n                                    <span *ngIf=\"!itemTemplate\">{{ getOptionLabel(option) }}</span>\n                                    <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: option, index: getOptionIndex(i, scrollerOptions) }\"></ng-container>\n                                </li>\n                            </ng-container>\n                        </ng-template>\n                        <li *ngIf=\"hasFilter() && isEmpty()\" class=\"p-listbox-empty-message\" role=\"option\">\n                            <ng-container *ngIf=\"!emptyFilterTemplate && !emptyTemplate; else emptyFilter\">\n                                {{ emptyFilterMessageText }}\n                            </ng-container>\n                            <ng-container #emptyFilter *ngTemplateOutlet=\"emptyFilterTemplate || emptyTemplate\"></ng-container>\n                        </li>\n                        <li *ngIf=\"!hasFilter() && isEmpty()\" class=\"p-listbox-empty-message\" role=\"option\">\n                            <ng-container *ngIf=\"!emptyTemplate; else empty\">\n                                {{ emptyMessage }}\n                            </ng-container>\n                            <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n                        </li>\n                    </ul>\n                </ng-template>\n            </div>\n            <div class=\"p-listbox-footer\" *ngIf=\"footerFacet || footerTemplate\">\n                <ng-content select=\"p-footer\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"footerTemplate; context: { $implicit: modelValue(), options: visibleOptions() }\"></ng-container>\n            </div>\n            <span *ngIf=\"isEmpty()\" role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\">\n                {{ emptyMessage }}\n            </span>\n            <span role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\">\n                {{ selectedMessageText }}\n            </span>\n            <span\n                #lastHiddenFocusableElement\n                role=\"presentation\"\n                [attr.aria-hidden]=\"true\"\n                class=\"p-hidden-accessible p-hidden-focusable\"\n                [tabindex]=\"!disabled ? tabindex : -1\"\n                (focus)=\"onLastHiddenFocus($event)\"\n                [attr.data-p-hidden-focusable]=\"true\"\n            >\n            </span>\n        </div>\n    `, providers: [LISTBOX_VALUE_ACCESSOR], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        class: 'p-element'\n                    }, styles: [\"@layer primeng{.p-listbox-list-wrapper{overflow:auto}.p-listbox-list{list-style-type:none;margin:0;padding:0}.p-listbox-item{cursor:pointer;position:relative;overflow:hidden;display:flex;align-items:center;-webkit-user-select:none;user-select:none}.p-listbox-header{display:flex;align-items:center}.p-listbox-filter-container{position:relative;flex:1 1 auto}.p-listbox-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-listbox-filter{width:100%}}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.FilterService }, { type: i1.PrimeNGConfig }, { type: i0.Renderer2 }], propDecorators: { id: [{\n                type: Input\n            }], searchMessage: [{\n                type: Input\n            }], emptySelectionMessage: [{\n                type: Input\n            }], selectionMessage: [{\n                type: Input\n            }], autoOptionFocus: [{\n                type: Input\n            }], selectOnFocus: [{\n                type: Input\n            }], searchLocale: [{\n                type: Input\n            }], focusOnHover: [{\n                type: Input\n            }], filterMessage: [{\n                type: Input\n            }], filterFields: [{\n                type: Input\n            }], lazy: [{\n                type: Input\n            }], virtualScroll: [{\n                type: Input\n            }], virtualScrollItemSize: [{\n                type: Input\n            }], virtualScrollOptions: [{\n                type: Input\n            }], scrollHeight: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], multiple: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], listStyle: [{\n                type: Input\n            }], listStyleClass: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], checkbox: [{\n                type: Input\n            }], filter: [{\n                type: Input\n            }], filterBy: [{\n                type: Input\n            }], filterMatchMode: [{\n                type: Input\n            }], filterLocale: [{\n                type: Input\n            }], metaKeySelection: [{\n                type: Input\n            }], dataKey: [{\n                type: Input\n            }], showToggleAll: [{\n                type: Input\n            }], optionLabel: [{\n                type: Input\n            }], optionValue: [{\n                type: Input\n            }], optionGroupChildren: [{\n                type: Input\n            }], optionGroupLabel: [{\n                type: Input\n            }], optionDisabled: [{\n                type: Input\n            }], ariaFilterLabel: [{\n                type: Input\n            }], filterPlaceHolder: [{\n                type: Input\n            }], emptyFilterMessage: [{\n                type: Input\n            }], emptyMessage: [{\n                type: Input\n            }], group: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], filterValue: [{\n                type: Input\n            }], selectAll: [{\n                type: Input\n            }], onChange: [{\n                type: Output\n            }], onClick: [{\n                type: Output\n            }], onDblClick: [{\n                type: Output\n            }], onFilter: [{\n                type: Output\n            }], onFocus: [{\n                type: Output\n            }], onBlur: [{\n                type: Output\n            }], onSelectAllChange: [{\n                type: Output\n            }], headerCheckboxViewChild: [{\n                type: ViewChild,\n                args: ['headerchkbox']\n            }], filterViewChild: [{\n                type: ViewChild,\n                args: ['filter']\n            }], lastHiddenFocusableElement: [{\n                type: ViewChild,\n                args: ['lastHiddenFocusableElement']\n            }], firstHiddenFocusableElement: [{\n                type: ViewChild,\n                args: ['firstHiddenFocusableElement']\n            }], scroller: [{\n                type: ViewChild,\n                args: ['scroller']\n            }], listViewChild: [{\n                type: ViewChild,\n                args: ['list']\n            }], headerFacet: [{\n                type: ContentChild,\n                args: [Header]\n            }], footerFacet: [{\n                type: ContentChild,\n                args: [Footer]\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }] } });\nclass ListboxModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: ListboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.5\", ngImport: i0, type: ListboxModule, declarations: [Listbox], imports: [CommonModule, SharedModule, RippleModule, ScrollerModule, SearchIcon, CheckIcon], exports: [Listbox, SharedModule, ScrollerModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: ListboxModule, imports: [CommonModule, SharedModule, RippleModule, ScrollerModule, SearchIcon, CheckIcon, SharedModule, ScrollerModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: ListboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, SharedModule, RippleModule, ScrollerModule, SearchIcon, CheckIcon],\n                    exports: [Listbox, SharedModule, ScrollerModule],\n                    declarations: [Listbox]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LISTBOX_VALUE_ACCESSOR, Listbox, ListboxModule };\n","<div class=\"grid p-fluid\">\r\n\t<div class=\"col-12 md:col-6\">\r\n\t\t<div class=\"card\">\r\n\t\t\t<h5>InputText</h5>\r\n\t\t\t<div class=\"grid formgrid\">\r\n\t\t\t\t<div class=\"col-12 mb-2 lg:col-4 lg:mb-0\">\r\n\t\t\t\t\t<input type=\"text\" pInputText placeholder=\"Default\">\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-12 mb-2 lg:col-4 lg:mb-0\">\r\n\t\t\t\t\t<input type=\"text\" pInputText placeholder=\"Disabled\" [disabled]=\"true\"/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-12 mb-2 lg:col-4 lg:mb-0\">\r\n\t\t\t\t\t<input type=\"text\" pInputText placeholder=\"Invalid\" class=\"ng-dirty ng-invalid\"/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<h5>Icons</h5>\r\n\t\t\t<div class=\"grid formgrid\">\r\n\t\t\t\t<div class=\"col-12 mb-2 lg:col-4 lg:mb-0\">\r\n\t\t\t\t\t<span class=\"p-input-icon-left\">\r\n\t\t\t\t\t\t<i class=\"pi pi-user\"></i>\r\n\t\t\t\t\t\t<input type=\"text\" pInputText placeholder=\"Username\"/>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-12 mb-2 lg:col-4 lg:mb-0\">\r\n\t\t\t\t\t<span class=\"p-input-icon-right\">\r\n\t\t\t\t\t\t<input type=\"text\" pInputText placeholder=\"Search\"/>\r\n\t\t\t\t\t\t<i class=\"pi pi-search\"></i>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-12 mb-2 lg:col-4 lg:mb-0\">\r\n\t\t\t\t\t<span class=\"p-input-icon-left p-input-icon-right\">\r\n\t\t\t\t\t\t<i class=\"pi pi-user\"></i>\r\n\t\t\t\t\t\t<input type=\"text\" pInputText placeholder=\"Search\"/>\r\n\t\t\t\t\t\t<i class=\"pi pi-search\"></i>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<h5>Float Label</h5>\r\n\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t<input id=\"float-input\" type=\"text\" pInputText>\r\n\t\t\t\t<label for=\"float-input\">Username</label>\r\n\t\t\t</span>\r\n\r\n\t\t\t<h5>Textarea</h5>\r\n\t\t\t<textarea rows=\"5\" cols=\"30\" placeholder=\"Your Message\" pInputTextarea></textarea>\r\n\r\n\t\t\t<h5>AutoComplete</h5>\r\n\t\t\t<p-autoComplete [(ngModel)]=\"selectedCountryAdvanced\" [suggestions]=\"filteredCountries\" (completeMethod)=\"filterCountry($event)\" field=\"name\" [dropdown]=\"true\">\r\n\t\t\t</p-autoComplete>\r\n\r\n\t\t\t<h5>Calendar</h5>\r\n\t\t\t<p-calendar [showIcon]=\"true\" inputId=\"icon\"></p-calendar>\r\n\r\n\t\t\t<h5>InputNumber</h5>\r\n\t\t\t<p-inputNumber mode=\"decimal\" [showButtons]=\"true\" [min]=\"0\" [max]=\"100\">\r\n\t\t\t</p-inputNumber>\r\n\r\n\t\t\t<h5>Chips</h5>\r\n\t\t\t<p-chips></p-chips>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"card\">\r\n            <div class=\"grid\">\r\n                <div class=\"col-12\">\r\n                    <h5>Slider</h5>\r\n                    <input type=\"text\" pInputText [(ngModel)]=\"valSlider\" readonly/>\r\n                    <p-slider [(ngModel)]=\"valSlider\"></p-slider>\r\n                </div>\r\n                <div class=\"col-12 md:col-6\">\r\n                    <h5>Rating</h5>\r\n                    <p-rating></p-rating>\r\n                </div>\r\n                <div class=\"col-12 md:col-6\">\r\n                    <h5>ColorPicker</h5>\r\n                    <p-colorPicker [(ngModel)]=\"valColor\"></p-colorPicker>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <h5>Knob</h5>\r\n                    <p-knob [(ngModel)]=\"valueKnob\" valueTemplate=\"{value}%\" [step]=\"10\" [min]=\"-50\" [max]=\"50\"></p-knob>\r\n                </div>\r\n            </div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div class=\"col-12 md:col-6\">\r\n\t\t<div class=\"card\">\r\n\t\t\t<h5>RadioButton</h5>\r\n\t\t\t<div class=\"grid formgrid\">\r\n\t\t\t\t<div class=\"col-12 md:col-4\">\r\n\t\t\t\t\t<div class=\"field-radiobutton\">\r\n\t\t\t\t\t\t<p-radioButton name=\"city\" value=\"Chicago\" [(ngModel)]=\"valRadio\" id=\"city1\"></p-radioButton>\r\n\t\t\t\t\t\t<label for=\"city1\">Chicago</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-12 md:col-4\">\r\n\t\t\t\t\t<div class=\"field-radiobutton\">\r\n\t\t\t\t\t\t<p-radioButton name=\"city\" value=\"Los Angeles\" [(ngModel)]=\"valRadio\"\r\n\t\t\t\t\t\t\t\t\t   id=\"city2\"></p-radioButton>\r\n\t\t\t\t\t\t<label for=\"city2\">Los Angeles</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-12 md:col-4\">\r\n\t\t\t\t\t<div class=\"field-radiobutton\">\r\n\t\t\t\t\t\t<p-radioButton name=\"city\" value=\"New York\" [(ngModel)]=\"valRadio\" id=\"city3\"></p-radioButton>\r\n\t\t\t\t\t\t<label for=\"city3\">New York</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<h5>Checkbox</h5>\r\n\t\t\t<div class=\"grid formgrid\">\r\n\t\t\t\t<div class=\"col-12 md:col-4\">\r\n\t\t\t\t\t<div class=\"field-checkbox\">\r\n\t\t\t\t\t\t<p-checkbox name=\"group1\" value=\"New York\" [(ngModel)]=\"valCheck\" id=\"ny\"></p-checkbox>\r\n\t\t\t\t\t\t<label for=\"ny\">New York</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-12 md:col-4\">\r\n\t\t\t\t\t<div class=\"field-checkbox\">\r\n\t\t\t\t\t\t<p-checkbox name=\"group1\" value=\"San Francisco\" [(ngModel)]=\"valCheck\" id=\"sf\"></p-checkbox>\r\n\t\t\t\t\t\t<label for=\"sf\">San Francisco</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-12 md:col-4\">\r\n\t\t\t\t\t<div class=\"field-checkbox\">\r\n\t\t\t\t\t\t<p-checkbox name=\"group1\" value=\"Los Angeles\" [(ngModel)]=\"valCheck\" id=\"la\"></p-checkbox>\r\n\t\t\t\t\t\t<label for=\"la\">Los Angeles</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<h5>Input Switch</h5>\r\n\t\t\t<p-inputSwitch [(ngModel)]=\"valSwitch\"></p-inputSwitch>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"card\">\r\n\t\t\t<h5>Listbox</h5>\r\n\t\t\t<p-listbox [options]=\"cities\" [(ngModel)]=\"selectedList\" [filter]=\"true\"></p-listbox>\r\n\r\n\t\t\t<h5>Dropdown</h5>\r\n\t\t\t<p-dropdown [options]=\"cities\" [(ngModel)]=\"selectedDrop\" placeholder=\"Select a City\" [showClear]=\"true\"></p-dropdown>\r\n\r\n\t\t\t<h5>Multiselect</h5>\r\n\t\t\t<p-multiSelect [options]=\"countries\" [(ngModel)]=\"selectedMulti\" placeholder=\"Select a Country\" optionLabel=\"name\" class=\"multiselect-custom\" display=\"chip\">\r\n\t\t\t\t<ng-template let-country pTemplate=\"item\">\r\n\t\t\t\t\t<div class=\"flex align-items-center\">\r\n\t\t\t\t\t\t<img src=\"assets/demo/images/flag/flag_placeholder.png\" [class]=\"'flag flag-' + country.code.toLowerCase()\" style=\"width:21px\"/>\r\n\t\t\t\t\t\t<span class=\"ml-2\">{{country.name}}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</ng-template>\r\n\t\t\t</p-multiSelect>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"card\">\r\n\t\t\t<h5>ToggleButton</h5>\r\n\t\t\t<p-toggleButton [(ngModel)]=\"valToggle\" onLabel=\"Yes\" offLabel=\"No\" [style]=\"{'width': '10em'}\"></p-toggleButton>\r\n\r\n\t\t\t<h5>SelectOneButton</h5>\r\n\t\t\t<p-selectButton [options]=\"paymentOptions\" [(ngModel)]=\"valSelect1\" optionLabel=\"name\"></p-selectButton>\r\n\r\n\t\t\t<h5>SelectManyButton</h5>\r\n\t\t\t<p-selectButton [options]=\"paymentOptions\" [(ngModel)]=\"valSelect2\" [multiple]=\"true\" optionLabel=\"name\"></p-selectButton>\r\n\t\t</div>\r\n\t</div>\r\n\t\r\n\t<div class=\"col-12\">\r\n\t\t<div class=\"card\">\r\n\t\t\t<h5>InputGroup</h5>\r\n\t\t\t<div class=\"grid\">\r\n\t\t\t\t<div class=\"col-12 md:col-6\">\r\n                    <p-inputGroup>\r\n                        <p-inputGroupAddon>\r\n                            <i class=\"pi pi-user\"></i>\r\n                        </p-inputGroupAddon>\r\n                        <input pInputText type=\"text\" placeholder=\"Username\" />\r\n                    </p-inputGroup>\r\n                </div>\r\n\t\t\t\t<div class=\"col-12 md:col-6\">\r\n                    <p-inputGroup class=\"w-full\">\r\n                        <p-inputGroupAddon>\r\n                            <i class=\"pi pi-tags\" style=\"line-height: 1.25\"></i>\r\n                        </p-inputGroupAddon>\r\n\r\n                        <p-inputGroupAddon>\r\n                            <i class=\"pi pi-shopping-cart\" style=\"line-height: 1.25\"></i>\r\n                        </p-inputGroupAddon>\r\n\r\n                        <input type=\"text\" pInputText placeholder=\"Price\" />\r\n                        <p-inputGroupAddon>$</p-inputGroupAddon>\r\n                        <p-inputGroupAddon>.00</p-inputGroupAddon>\r\n                    </p-inputGroup>\r\n                </div>\r\n\t\t\t\t<div class=\"col-12 md:col-6\">\r\n                    <p-inputGroup>\r\n                        <button type=\"button\" pButton label=\"Search\"></button>\r\n                        <input type=\"text\" pInputText placeholder=\"Keyword\" />\r\n                    </p-inputGroup>\r\n                </div>\r\n\t\t\t\t<div class=\"col-12 md:col-6\">\r\n                    <p-inputGroup>\r\n                        <p-inputGroupAddon><p-checkbox [(ngModel)]=\"valCheck2\"\r\n                                [binary]=\"true\"></p-checkbox></p-inputGroupAddon>\r\n                        <input type=\"text\" pInputText placeholder=\"Username\" />\r\n                    </p-inputGroup>\r\n                </div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { CountryService } from 'src/app/demo/service/country.service';\r\n\r\n@Component({\r\n    templateUrl: './inputdemo.component.html'\r\n})\r\nexport class InputDemoComponent implements OnInit {\r\n    \r\n    countries: any[] = [];\r\n\r\n    filteredCountries: any[] = [];\r\n\r\n    selectedCountryAdvanced: any[] = [];\r\n\r\n    valSlider = 50;\r\n\r\n    valColor = '#424242';\r\n\r\n    valRadio: string = '';\r\n\r\n    valCheck: string[] = [];\r\n\r\n    valCheck2: boolean = false;\r\n\r\n    valSwitch: boolean = false;\r\n\r\n    cities: SelectItem[] = [];\r\n\r\n    selectedList: SelectItem = { value: '' };\r\n\r\n    selectedDrop: SelectItem = { value: '' };\r\n\r\n    selectedMulti: any[] = [];\r\n\r\n    valToggle = false;\r\n\r\n    paymentOptions: any[] = [];\r\n\r\n    valSelect1: string = \"\";\r\n\r\n    valSelect2: string = \"\";\r\n\r\n    valueKnob = 20;\r\n\r\n    constructor(private countryService: CountryService) { }\r\n\r\n    ngOnInit() {\r\n        this.countryService.getCountries().then(countries => {\r\n            this.countries = countries;\r\n        });\r\n\r\n        this.cities = [\r\n            { label: 'New York', value: { id: 1, name: 'New York', code: 'NY' } },\r\n            { label: 'Rome', value: { id: 2, name: 'Rome', code: 'RM' } },\r\n            { label: 'London', value: { id: 3, name: 'London', code: 'LDN' } },\r\n            { label: 'Istanbul', value: { id: 4, name: 'Istanbul', code: 'IST' } },\r\n            { label: 'Paris', value: { id: 5, name: 'Paris', code: 'PRS' } }\r\n        ];\r\n\r\n        this.paymentOptions = [\r\n            { name: 'Option 1', value: 1 },\r\n            { name: 'Option 2', value: 2 },\r\n            { name: 'Option 3', value: 3 }\r\n        ];\r\n    }\r\n\r\n    filterCountry(event: any) {\r\n        const filtered: any[] = [];\r\n        const query = event.query;\r\n        for (let i = 0; i < this.countries.length; i++) {\r\n            const country = this.countries[i];\r\n            if (country.name.toLowerCase().indexOf(query.toLowerCase()) == 0) {\r\n                filtered.push(country);\r\n            }\r\n        }\r\n\r\n        this.filteredCountries = filtered;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { InputDemoComponent } from './inputdemo.component';\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forChild([\r\n\t\t{ path: '', component: InputDemoComponent }\r\n\t])],\r\n\texports: [RouterModule]\r\n})\r\nexport class InputDemoRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { InputDemoComponent } from './inputdemo.component';\r\nimport { InputDemoRoutingModule } from './inputdemo-routing.module';\r\nimport { AutoCompleteModule } from \"primeng/autocomplete\";\r\nimport { CalendarModule } from \"primeng/calendar\";\r\nimport { ChipsModule } from \"primeng/chips\";\r\nimport { ChipModule } from \"primeng/chip\";\r\nimport { DropdownModule } from \"primeng/dropdown\";\r\nimport { InputMaskModule } from \"primeng/inputmask\";\r\nimport { InputNumberModule } from \"primeng/inputnumber\";\r\nimport { CascadeSelectModule } from \"primeng/cascadeselect\";\r\nimport { MultiSelectModule } from \"primeng/multiselect\";\r\nimport { InputTextareaModule } from \"primeng/inputtextarea\";\r\nimport { InputTextModule } from \"primeng/inputtext\";\r\nimport { RatingModule } from 'primeng/rating';\r\nimport { KnobModule } from 'primeng/knob';\r\nimport { ListboxModule } from 'primeng/listbox';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { InputSwitchModule } from 'primeng/inputswitch';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { ColorPickerModule } from 'primeng/colorpicker';\r\nimport { ToggleButtonModule } from 'primeng/togglebutton';\r\nimport { SliderModule } from 'primeng/slider';\r\nimport { InputGroupAddonModule } from 'primeng/inputgroupaddon';\r\nimport { InputGroupModule } from 'primeng/inputgroup';\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tFormsModule,\r\n\t\tInputDemoRoutingModule,\r\n\t\tAutoCompleteModule,\r\n\t\tCalendarModule,\r\n\t\tChipsModule,\r\n\t\tDropdownModule,\r\n\t\tInputMaskModule,\r\n\t\tInputNumberModule,\r\n\t\tColorPickerModule,\r\n\t\tCascadeSelectModule,\r\n\t\tMultiSelectModule,\r\n\t\tToggleButtonModule,\r\n\t\tSliderModule,\r\n\t\tInputTextareaModule,\r\n\t\tRadioButtonModule,\r\n\t\tInputTextModule,\r\n\t\tRatingModule,\r\n\t\tChipModule,\r\n\t\tKnobModule,\r\n\t\tInputSwitchModule,\r\n\t\tListboxModule,\r\n\t\tSelectButtonModule,\r\n\t\tCheckboxModule,\r\n\t\tButtonModule,\r\n\t\tInputGroupModule,\r\n\t\tInputGroupAddonModule\r\n\t],\r\n\tdeclarations: [InputDemoComponent]\r\n})\r\nexport class InputDemoModule { }\r\n","import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, ContentChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport * as i2 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport { ObjectUtils } from 'primeng/utils';\n\nconst SELECTBUTTON_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectButton),\n    multi: true\n};\n/**\n * SelectButton is used to choose single or multiple items from a list using buttons.\n * @group Components\n */\nclass SelectButton {\n    cd;\n    /**\n     * An array of selectitems to display as the available options.\n     * @group Props\n     */\n    options;\n    /**\n     * Name of the label field of an option.\n     * @group Props\n     */\n    optionLabel;\n    /**\n     * Name of the value field of an option.\n     * @group Props\n     */\n    optionValue;\n    /**\n     * Name of the disabled field of an option.\n     * @group Props\n     */\n    optionDisabled;\n    /**\n     * Whether selection can be cleared.\n     * @group Props\n     */\n    unselectable = false;\n    /**\n     * Index of the element in tabbing order.\n     * @group Props\n     */\n    tabindex = 0;\n    /**\n     * When specified, allows selecting multiple values.\n     * @group Props\n     */\n    multiple;\n    /**\n     * Whether selection can not be cleared.\n     * @group Props\n     */\n    allowEmpty = true;\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    style;\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Establishes relationships between the component and label(s) where its value should be one or more element IDs.\n     * @group Props\n     */\n    ariaLabelledBy;\n    /**\n     * When present, it specifies that the element should be disabled.\n     * @group Props\n     */\n    disabled;\n    /**\n     * A property to uniquely identify a value in options.\n     * @group Props\n     */\n    dataKey;\n    /**\n     * Callback to invoke on input click.\n     * @param {SelectButtonOptionClickEvent} event - Custom click event.\n     * @group Emits\n     */\n    onOptionClick = new EventEmitter();\n    /**\n     * Callback to invoke on selection change.\n     * @param {SelectButtonChangeEvent} event - Custom change event.\n     * @group Emits\n     */\n    onChange = new EventEmitter();\n    container;\n    itemTemplate;\n    get selectButtonTemplate() {\n        return this.itemTemplate?.template;\n    }\n    get equalityKey() {\n        return this.optionValue ? null : this.dataKey;\n    }\n    value;\n    onModelChange = () => { };\n    onModelTouched = () => { };\n    focusedIndex = 0;\n    constructor(cd) {\n        this.cd = cd;\n    }\n    getOptionLabel(option) {\n        return this.optionLabel ? ObjectUtils.resolveFieldData(option, this.optionLabel) : option.label != undefined ? option.label : option;\n    }\n    getOptionValue(option) {\n        return this.optionValue ? ObjectUtils.resolveFieldData(option, this.optionValue) : this.optionLabel || option.value === undefined ? option : option.value;\n    }\n    isOptionDisabled(option) {\n        return this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : option.disabled !== undefined ? option.disabled : false;\n    }\n    writeValue(value) {\n        this.value = value;\n        this.cd.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n    onOptionSelect(event, option, index) {\n        if (this.disabled || this.isOptionDisabled(option)) {\n            return;\n        }\n        let selected = this.isSelected(option);\n        if (selected && this.unselectable) {\n            return;\n        }\n        let optionValue = this.getOptionValue(option);\n        let newValue;\n        if (this.multiple) {\n            if (selected)\n                newValue = this.value.filter((val) => !ObjectUtils.equals(val, optionValue, this.equalityKey));\n            else\n                newValue = this.value ? [...this.value, optionValue] : [optionValue];\n        }\n        else {\n            if (selected && !this.allowEmpty) {\n                return;\n            }\n            newValue = selected ? null : optionValue;\n        }\n        this.focusedIndex = index;\n        this.value = newValue;\n        this.onModelChange(this.value);\n        this.onChange.emit({\n            originalEvent: event,\n            value: this.value\n        });\n        this.onOptionClick.emit({\n            originalEvent: event,\n            option: option,\n            index: index\n        });\n    }\n    onKeyDown(event, option, index) {\n        switch (event.code) {\n            case 'Space': {\n                this.onOptionSelect(event, option, index);\n                event.preventDefault();\n                break;\n            }\n            case 'ArrowDown':\n            case 'ArrowRight': {\n                this.changeTabIndexes(event, 'next');\n                event.preventDefault();\n                break;\n            }\n            case 'ArrowUp':\n            case 'ArrowLeft': {\n                this.changeTabIndexes(event, 'prev');\n                event.preventDefault();\n                break;\n            }\n            default:\n                //no op\n                break;\n        }\n    }\n    changeTabIndexes(event, direction) {\n        let firstTabableChild, index;\n        for (let i = 0; i <= this.container.nativeElement.children.length - 1; i++) {\n            if (this.container.nativeElement.children[i].getAttribute('tabindex') === '0')\n                firstTabableChild = { elem: this.container.nativeElement.children[i], index: i };\n        }\n        if (direction === 'prev') {\n            if (firstTabableChild.index === 0)\n                index = this.container.nativeElement.children.length - 1;\n            else\n                index = firstTabableChild.index - 1;\n        }\n        else {\n            if (firstTabableChild.index === this.container.nativeElement.children.length - 1)\n                index = 0;\n            else\n                index = firstTabableChild.index + 1;\n        }\n        this.focusedIndex = index;\n        this.container.nativeElement.children[index].focus();\n    }\n    onFocus(event, index) {\n        this.focusedIndex = index;\n    }\n    onBlur() {\n        this.onModelTouched();\n    }\n    removeOption(option) {\n        this.value = this.value.filter((val) => !ObjectUtils.equals(val, this.getOptionValue(option), this.dataKey));\n    }\n    isSelected(option) {\n        let selected = false;\n        const optionValue = this.getOptionValue(option);\n        if (this.multiple) {\n            if (this.value && Array.isArray(this.value)) {\n                for (let val of this.value) {\n                    if (ObjectUtils.equals(val, optionValue, this.dataKey)) {\n                        selected = true;\n                        break;\n                    }\n                }\n            }\n        }\n        else {\n            selected = ObjectUtils.equals(this.getOptionValue(option), this.value, this.equalityKey);\n        }\n        return selected;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: SelectButton, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.5\", type: SelectButton, selector: \"p-selectButton\", inputs: { options: \"options\", optionLabel: \"optionLabel\", optionValue: \"optionValue\", optionDisabled: \"optionDisabled\", unselectable: \"unselectable\", tabindex: \"tabindex\", multiple: \"multiple\", allowEmpty: \"allowEmpty\", style: \"style\", styleClass: \"styleClass\", ariaLabelledBy: \"ariaLabelledBy\", disabled: \"disabled\", dataKey: \"dataKey\" }, outputs: { onOptionClick: \"onOptionClick\", onChange: \"onChange\" }, host: { classAttribute: \"p-element\" }, providers: [SELECTBUTTON_VALUE_ACCESSOR], queries: [{ propertyName: \"itemTemplate\", first: true, predicate: PrimeTemplate, descendants: true }], viewQueries: [{ propertyName: \"container\", first: true, predicate: [\"container\"], descendants: true }], ngImport: i0, template: `\n        <div #container [ngClass]=\"'p-selectbutton p-buttonset p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\" role=\"group\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.data-pc-name]=\"'selectbutton'\" [attr.data-pc-section]=\"'root'\">\n            <div\n                *ngFor=\"let option of options; let i = index\"\n                pRipple\n                [attr.tabindex]=\"i === focusedIndex ? '0' : '-1'\"\n                [attr.aria-label]=\"option.label\"\n                [role]=\"multiple ? 'checkbox' : 'radio'\"\n                [attr.aria-checked]=\"isSelected(option)\"\n                [attr.aria-disabled]=\"optionDisabled\"\n                class=\"p-button p-component\"\n                [class]=\"option.styleClass\"\n                [ngClass]=\"{ 'p-highlight': isSelected(option), 'p-disabled': disabled || isOptionDisabled(option), 'p-button-icon-only': option.icon && !getOptionLabel(option) }\"\n                [attr.aria-pressed]=\"isSelected(option)\"\n                (click)=\"onOptionSelect($event, option, i)\"\n                (keydown)=\"onKeyDown($event, option, i)\"\n                [attr.title]=\"option.title\"\n                (focus)=\"onFocus($event, i)\"\n                (blur)=\"onBlur()\"\n                [attr.aria-labelledby]=\"this.getOptionLabel(option)\"\n                [attr.data-pc-section]=\"'button'\"\n            >\n                <ng-container *ngIf=\"!itemTemplate; else customcontent\">\n                    <span [ngClass]=\"'p-button-icon p-button-icon-left'\" [class]=\"option.icon\" *ngIf=\"option.icon\" [attr.data-pc-section]=\"'icon'\"></span>\n                    <span class=\"p-button-label\" [attr.data-pc-section]=\"'label'\">{{ getOptionLabel(option) }}</span>\n                </ng-container>\n                <ng-template #customcontent>\n                    <ng-container *ngTemplateOutlet=\"selectButtonTemplate; context: { $implicit: option, index: i }\"></ng-container>\n                </ng-template>\n            </div>\n        </div>\n    `, isInline: true, styles: [\"@layer primeng{.p-button{margin:0;display:inline-flex;cursor:pointer;-webkit-user-select:none;user-select:none;align-items:center;vertical-align:bottom;text-align:center;overflow:hidden;position:relative}.p-button-label{flex:1 1 auto}.p-button-icon-right{order:1}.p-button:disabled{cursor:default;pointer-events:none}.p-button-icon-only{justify-content:center}.p-button-icon-only:after{content:\\\"p\\\";visibility:hidden;clip:rect(0 0 0 0);width:0}.p-button-vertical{flex-direction:column}.p-button-icon-bottom{order:2}.p-buttonset .p-button{margin:0}.p-buttonset .p-button:not(:last-child){border-right:0 none}.p-buttonset .p-button:not(:first-of-type):not(:last-of-type){border-radius:0}.p-buttonset .p-button:first-of-type{border-top-right-radius:0;border-bottom-right-radius:0}.p-buttonset .p-button:last-of-type{border-top-left-radius:0;border-bottom-left-radius:0}.p-buttonset .p-button:focus{position:relative;z-index:1}p-button[iconpos=right] spinnericon{order:1}}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i2.Ripple, selector: \"[pRipple]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: SelectButton, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-selectButton', template: `\n        <div #container [ngClass]=\"'p-selectbutton p-buttonset p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\" role=\"group\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.data-pc-name]=\"'selectbutton'\" [attr.data-pc-section]=\"'root'\">\n            <div\n                *ngFor=\"let option of options; let i = index\"\n                pRipple\n                [attr.tabindex]=\"i === focusedIndex ? '0' : '-1'\"\n                [attr.aria-label]=\"option.label\"\n                [role]=\"multiple ? 'checkbox' : 'radio'\"\n                [attr.aria-checked]=\"isSelected(option)\"\n                [attr.aria-disabled]=\"optionDisabled\"\n                class=\"p-button p-component\"\n                [class]=\"option.styleClass\"\n                [ngClass]=\"{ 'p-highlight': isSelected(option), 'p-disabled': disabled || isOptionDisabled(option), 'p-button-icon-only': option.icon && !getOptionLabel(option) }\"\n                [attr.aria-pressed]=\"isSelected(option)\"\n                (click)=\"onOptionSelect($event, option, i)\"\n                (keydown)=\"onKeyDown($event, option, i)\"\n                [attr.title]=\"option.title\"\n                (focus)=\"onFocus($event, i)\"\n                (blur)=\"onBlur()\"\n                [attr.aria-labelledby]=\"this.getOptionLabel(option)\"\n                [attr.data-pc-section]=\"'button'\"\n            >\n                <ng-container *ngIf=\"!itemTemplate; else customcontent\">\n                    <span [ngClass]=\"'p-button-icon p-button-icon-left'\" [class]=\"option.icon\" *ngIf=\"option.icon\" [attr.data-pc-section]=\"'icon'\"></span>\n                    <span class=\"p-button-label\" [attr.data-pc-section]=\"'label'\">{{ getOptionLabel(option) }}</span>\n                </ng-container>\n                <ng-template #customcontent>\n                    <ng-container *ngTemplateOutlet=\"selectButtonTemplate; context: { $implicit: option, index: i }\"></ng-container>\n                </ng-template>\n            </div>\n        </div>\n    `, providers: [SELECTBUTTON_VALUE_ACCESSOR], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        class: 'p-element'\n                    }, styles: [\"@layer primeng{.p-button{margin:0;display:inline-flex;cursor:pointer;-webkit-user-select:none;user-select:none;align-items:center;vertical-align:bottom;text-align:center;overflow:hidden;position:relative}.p-button-label{flex:1 1 auto}.p-button-icon-right{order:1}.p-button:disabled{cursor:default;pointer-events:none}.p-button-icon-only{justify-content:center}.p-button-icon-only:after{content:\\\"p\\\";visibility:hidden;clip:rect(0 0 0 0);width:0}.p-button-vertical{flex-direction:column}.p-button-icon-bottom{order:2}.p-buttonset .p-button{margin:0}.p-buttonset .p-button:not(:last-child){border-right:0 none}.p-buttonset .p-button:not(:first-of-type):not(:last-of-type){border-radius:0}.p-buttonset .p-button:first-of-type{border-top-right-radius:0;border-bottom-right-radius:0}.p-buttonset .p-button:last-of-type{border-top-left-radius:0;border-bottom-left-radius:0}.p-buttonset .p-button:focus{position:relative;z-index:1}p-button[iconpos=right] spinnericon{order:1}}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }], propDecorators: { options: [{\n                type: Input\n            }], optionLabel: [{\n                type: Input\n            }], optionValue: [{\n                type: Input\n            }], optionDisabled: [{\n                type: Input\n            }], unselectable: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], multiple: [{\n                type: Input\n            }], allowEmpty: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], ariaLabelledBy: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], dataKey: [{\n                type: Input\n            }], onOptionClick: [{\n                type: Output\n            }], onChange: [{\n                type: Output\n            }], container: [{\n                type: ViewChild,\n                args: ['container']\n            }], itemTemplate: [{\n                type: ContentChild,\n                args: [PrimeTemplate]\n            }] } });\nclass SelectButtonModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: SelectButtonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.5\", ngImport: i0, type: SelectButtonModule, declarations: [SelectButton], imports: [CommonModule, RippleModule, SharedModule], exports: [SelectButton, SharedModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: SelectButtonModule, imports: [CommonModule, RippleModule, SharedModule, SharedModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: SelectButtonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, RippleModule, SharedModule],\n                    exports: [SelectButton, SharedModule],\n                    declarations: [SelectButton]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SELECTBUTTON_VALUE_ACCESSOR, SelectButton, SelectButtonModule };\n"],"x_google_ignoreList":[0,1,2,7]}