{"version":3,"file":"6110.939c6037d134b26e.js","mappings":"uJAG4C,IAEtCA,EAAS,MAAf,MAAMA,UAAkBC,IACpBC,iBAAW,UAAAC,EAAA,gBAAAC,GAAA,OAAAD,MAA8EE,MAAUL,KAASI,GAATJ,EAAS,GAAjG,GACXE,iBADyFG,MAAE,CAAAC,KACJN,EAASO,UAAA,gBAAAC,YAAA,EAAAC,SAAA,CADPJ,aAAEK,MAAA,EAAAC,KAAA,EAAAC,OAAA,ihBAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAAFT,cAAE,WAAFA,MAAE,YAAFA,SAO/E,EAAAS,IAP+ET,MAAEU,EAAAC,iBAAFX,MAAE,aAAAU,EAAAE,UAAFZ,CAEuC,cAAAU,EAAAG,WAFvCb,CAEuC,OAAAU,EAAAI,MAAA,EAAAC,aAAA,CAMpEC,MAAYC,cAAA,IAC3E,OAVKtB,CAAS,kICOf,SAAAuB,EAAAT,EAAAC,GA4KyG,GA5KzG,EAAAD,IAwK6FT,MAAE,aAAFA,MAAE,GAAFA,SAIY,EAAAS,EAAA,OAAAU,EAJZnB,MAAE,GAAFA,MAAE,KAAAmB,EAAAC,GAAA,WAAFpB,MAAE,GAAFA,MAAEmB,EAAAE,OAIG,WAAAC,EAAAb,EAAAC,GAAA,EAAAD,GAJLT,MAAE,EAMf,UAAAuB,EAAAd,EAAAC,GAAA,UAAAc,EAAAf,EAAAC,GAAA,EAAAD,GANaT,MAAE,EAAAuB,EAAA,kBAQf,UAAAE,EAAAhB,EAAAC,GAgB2B,GAhB3B,EAAAD,GARaT,MAAE,aAwBY,EAAAS,EAAA,OAAAiB,EAxBd1B,MAAE,GAAFA,MAAE0B,EAAAC,YAAF3B,MAAE,UAAA0B,EAAAE,UAwBI,WAAAC,EAAApB,EAAAC,GACT,GADS,EAAAD,GAxBNT,MAAE,kBAyBL,EAAAS,EAAA,OAAAqB,EAzBG9B,MAAE,GAAFA,MAAE,aAAA8B,EAAAF,UAyBR,WAAAG,EAAAtB,EAAAC,GAC5C,GAD4C,EAAAD,IAzBMT,MAAE,GAAFA,MAAE,EAAAyB,EAAA,cAAFzB,CAwBc,EAAA6B,EAAA,oBAxBd7B,SA0BlD,EAAAS,EAAA,OAAAuB,EA1BkDhC,MAAE,GAAFA,MAAE,GAAFA,MAAE,OAAAgC,EAAAL,YAAF3B,MAAE,GAAFA,MAAE,QAAAgC,EAAAL,WAyBlC,WAAAM,EAAAxB,EAAAC,GAIkD,GAJlD,EAAAD,GAzBgCT,MAAE,aA6BgB,EAAAS,EAAA,OAAAyB,EA7BlBlC,MAAE,GAAFA,MAAEkC,EAAAC,cAAFnC,MAAE,UAAAkC,EAAAN,UA6BQ,WAAAQ,EAAA3B,EAAAC,GACZ,GADY,EAAAD,GA7BVT,MAAE,iBA8BJ,EAAAS,EAAA,OAAA4B,EA9BErC,MAAE,GAAFA,MAAE,aAAAqC,EAAAT,UA8BP,WAAAU,EAAA7B,EAAAC,GAC7C,GAD6C,EAAAD,IA9BKT,MAAE,GAAFA,MAAE,EAAAiC,EAAA,cAAFjC,CA6BkB,EAAAoC,EAAA,mBA7BlBpC,SA+BlD,EAAAS,EAAA,OAAA8B,EA/BkDvC,MAAE,GAAFA,MAAE,GAAFA,MAAE,OAAAuC,EAAAJ,cAAFnC,MAAE,GAAFA,MAAE,QAAAuC,EAAAJ,aA8BjC,WAAAK,EAAA/B,EAAAC,GAEvB,GAFuB,EAAAD,IA9B+BT,MAAE,GAAFA,MAAE,EAAA+B,EAAA,sBAAF/B,CA0BlD,EAAAsC,EAAA,uBA1BkDtC,SAgCtD,EAAAS,EAAA,OAAAgC,EAhCsDzC,MAAE,GAAFA,MAAE,GAAFA,MAAE,QAAAyC,EAAAC,WAAF1C,MAAE,GAAFA,MAAE,OAAAyC,EAAAC,UA4BrC,WAAAC,EAAAlC,EAAAC,GAAA,UAAAkC,EAAAnC,EAAAC,GAAA,EAAAD,GA5BmCT,MAAE,EAAA2C,EAAA,kBAkC8B,OAAAE,EAAAC,KAAAC,UAAAD,IAAA,SAAAE,EAAAvC,EAAAC,GAAA,KAAAD,EAAA,OAAAwC,EAlChCjD,cAAE,eAAFA,MAAE,iBAAAkD,GAAFlD,MAAEiD,GAAA,MAAAE,EAAFnD,MAAE,UAAFA,MAmB5DmD,EAAAC,YAAAF,GAAmB,EAnByClD,CAmBxC,mBAAAkD,GAnBwClD,MAAEiD,GAAA,MAAAI,EAAFrD,MAAE,UAAFA,MAoB1DqD,EAAAC,UAAAJ,GAAiB,GApByClD,MAAE,EAAAwC,EAAA,sBAAFxC,CAgCtD,EAAA4C,EAAA,aAhCsD5C,OAmChE,MAAAS,EAAA,OAAA8C,EAnCgEvD,MAAE,GAAFA,MAAE,KAAAuD,EAAAnC,GAAA,UAAFpB,CAW3C,aAAAuD,EAAAC,gBAX2CxD,CAW3C,gBAAAuD,EAAAnC,GAAA,WAX2CpB,CAW3C,iBAAAuD,EAAAb,WAX2C1C,MAAE,GAAFA,MAAE,QAAAuD,EAAAE,oBAAFzD,MAAE,GAAFA,MAAE,mBAAAuD,EAAAE,mBAAFzD,CAkCjB,0BAlCiBA,MAAE,EAAA6C,EAAAU,EAAAb,WAkCnB,QAAAgB,GAAAZ,EAAAa,EAAAC,MAAA,sBAAAd,EAAA,oBAAAa,EAAA,uBAAAC,IAAA,SAAAC,EAAApD,EAAAC,GAAA,KAAAD,EAAA,OAAAqD,EAlCiB9D,cAAE,WAAFA,MAAE,iBAAAkD,GAAFlD,MAAE8D,GAAA,MAAAC,EAAF/D,QAAE,OAAFA,MAGzB+D,EAAAC,cAAAd,GAAqB,GAHIlD,MAAE,EAAAkB,EAAA,cAAFlB,MAAE,KAAFA,MAAE,EAAAsB,EAAA,sBAAFtB,MAAE,WAAFA,MAAE,EAAAwB,EAAA,WAAFxB,CAQb,EAAAgD,EAAA,gBARahD,SAoCvE,MAAAS,EAAA,OAAAwD,EApCuEjE,cAAE,KAAAiE,EAAA7C,GAAA,aAAFpB,MAAE,GAAFA,MAAE,OAAAiE,EAAA5C,QAAFrB,MAAE,GAAFA,MAAE,mBAAAiE,EAAAC,gBAAFlE,MAAE,GAAFA,MAAE,UAAFA,MAAE,EAAA0D,EAAA,UAAAO,EAAAE,QAAA,QAAAF,EAAAE,QAAA,WAAAF,EAAAE,UAAFnE,MAAE,GAAFA,MAAE,mBAAAiE,EAAAG,cAAFpE,MAAE,GAAFA,MAAE,OAAAiE,EAAAI,WAUtD,WAAAC,EAAA7D,EAAAC,GAAA,EAAAD,GAVoDT,MAAE,EAsDV,UAAAuE,EAAA9D,EAAAC,GAAA,EAAAD,GAtDQT,MAAE,EA2DX,UAAAwE,EAAA/D,EAAAC,GAC9D,GAD8D,EAAAD,IA3DST,MAAE,YAAFA,MAAE,KAAFA,MAAE,EAAAuE,EAAA,sBAAFvE,SA4DvE,EAAAS,EAAA,OAAAgE,EA5DuEzE,cAAE,GAAFA,MAAE,mBAAAyE,EAAAC,eA2D5B,QAAAC,EAAA,oCAAAC,GAAAjB,EAAAC,MAAA,8CAAAD,EAAA,mBAAAC,IAAAiB,EAAA/B,KAAAgC,iBAAAhC,EAAAiC,OAAA,IAAAC,QAAA,MAAAC,EAAAtB,KAAAuB,MAAA,SAAAC,OAAAxB,IAAAyB,EAAAtC,KAAAgC,iBAAAhC,EAAAiC,OAAA,IAAAC,QAAA,MAAAK,EAAA1B,KAAAuB,MAAA,UAAAC,OAAAxB,IAAA2B,EAAA,gCA/N7DC,EAAK,MAAX,MAAMA,EACFC,GAKAnB,WAKAhD,OAKAqB,UAKA+C,MAKAC,WAKAvB,QAAU,MAMVxC,WAMAQ,aAMAwD,YAAa,EAKbC,QAAU,OAKVC,kBAAoB,uCAMpBC,gBAAkB,IAAIC,MAMtBC,eAAiB,IAAID,MAMrBE,cAAgB,IAAIF,MACpBG,YACAC,UACA/B,aACAgC,UACAlC,eACAmC,gBACA3B,eACAjB,mBACA,MAAIrC,GACA,SAAOkF,OACX,CACA,mBAAI9C,GACA,OAAO+C,KAAKlF,MAChB,CACAmF,YAAYhB,GACRe,KAAKf,GAAKA,CACd,CACAiB,qBACIF,KAAKJ,UAAUO,QAASC,IACpB,OAAQA,EAAKC,WACT,IAAK,SACDL,KAAKrC,eAAiByC,EAAKnG,SAC3B,MACJ,IAAK,UAYL,QACI+F,KAAKF,gBAAkBM,EAAKnG,SAC5B,MAXJ,IAAK,SACD+F,KAAK7B,eAAiBiC,EAAKnG,SAC3B,MACJ,IAAK,QACD+F,KAAKnC,aAAeuC,EAAKnG,SACzB,MACJ,IAAK,cACD+F,KAAK9C,mBAAqBkD,EAAKnG,SAKvC,EAER,CACAwD,cAAc6C,GACW,WAAjBN,KAAKX,SACLW,KAAKO,OAAOD,EAEpB,CACAzD,YAAYyD,GACa,SAAjBN,KAAKX,SACLW,KAAKO,OAAOD,EAEpB,CACAC,OAAOD,GACH,GAAIN,KAAKH,UACL,OAAO,EAEXG,KAAKH,WAAY,EACjBG,KAAKP,eAAee,KAAK,CAAEC,cAAeH,EAAOnE,UAAW6D,KAAK7D,YAC7D6D,KAAKlC,aACDkC,KAAK7D,UACL6D,KAAKU,SAELV,KAAKW,YAEbL,EAAMM,gBACV,CACAF,SACIV,KAAK7D,WAAY,EACjB6D,KAAKT,gBAAgBiB,KAAKR,KAAK7D,UACnC,CACAwE,WACIX,KAAK7D,WAAY,EACjB6D,KAAKT,gBAAgBiB,KAAKR,KAAK7D,UACnC,CACA0E,sBACI,OAAOb,KAAKf,GAAG6B,cAAcC,SAAS,EAC1C,CACAhE,UAAUuD,IACa,UAAfA,EAAMU,MAAmC,UAAfV,EAAMU,QAChChB,KAAKO,OAAOD,GACZA,EAAMM,iBAEd,CACAK,aAAaX,GACTN,KAAKH,WAAY,EACjBG,KAAKN,cAAcc,KAAK,CAAEC,cAAeH,EAAOnE,UAAW6D,KAAK7D,WACpE,CACA7C,iBAAW,SAAAE,GAAA,WAAAA,GAAwFwF,GAAVvF,MAAiCA,OAAa,EACvIH,iBADyFG,MAAE,CAAAC,KACJsF,EAAKrF,UAAA,cAAAuH,eAAA,SAAAhH,EAAAC,EAAAgH,GAAgmB,GAAhmB,EAAAjH,IADHT,MAAE0H,EAC+gBC,KAAM,GADvhB3H,MAAE0H,EAColBE,KAAa,MAAAnH,EAAA,KAAAoH,EADnmB7H,MAAE6H,EAAF7H,WAAEU,EAAAwF,YAAA2B,EAAAC,OAAF9H,MAAE6H,EAAF7H,WAAEU,EAAAyF,UAAA0B,EAAA,GAAAE,UAAA,gBAAAC,OAAA,CAAA3D,WAAA,aAAAhD,OAAA,SAAAqB,UAAA,YAAA+C,MAAA,QAAAC,WAAA,aAAAvB,QAAA,UAAAxC,WAAA,aAAAQ,aAAA,eAAAwD,WAAA,aAAAC,QAAA,UAAAC,kBAAA,qBAAAoC,QAAA,CAAAnC,gBAAA,kBAAAE,eAAA,iBAAAC,cAAA,iBAAAiC,mBAAA5C,EAAAjF,MAAA,EAAAC,KAAA,GAAAC,OAAA,iuBAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAAFT,MAAE2E,GAAF3E,MAAE,WAAFA,MAAE,EAAA6D,EAAA,cAAF7D,MAAE,WAAFA,MAAE,8BAAAkD,GAAA,OAkDzDxC,EAAA8G,aAAAtE,EAAoB,GAlDmClD,MAAE,WAAFA,MAAE,GAAFA,MAAE,EAAAsE,EAAA,sBAAFtE,cAAE,EAAAwE,EAAA,aAAFxE,WA6D3E,EAAAS,IA7D2ET,MAAEU,EAAAgF,YAAF1F,MAAE,UAAFA,MAAE,GAAA4E,EAAAlE,EAAA2D,YAAA3D,EAAAgC,WAAAhC,EAAA2D,YAAFrE,CAEwF,UAAAU,EAAA+E,OAFxFzF,MAAE,KAAAU,EAAAU,GAAFpB,CAElE,wBAFkEA,MAAE,GAAFA,MAAE,OAAAU,EAAAiF,YAAF3F,MAAE,GAAFA,MAAE,KAAAU,EAAAU,GAAA,WAAFpB,CAwCvD,gBAAAU,EAAAgC,UAxCuD1C,MAAE,GAAAiF,EAAFjF,MAAE,GAAA6E,EAAAnE,EAAA0F,UAAA1F,EAAAmF,kBAAA,QAAF7F,MAAE,GAAAqF,EAAFrF,MAAE,GAAAoF,EAAA1E,EAAA0F,UAAA1F,EAAAmF,kBAAA,SAAF7F,MAAE,kBAAAU,EAAAU,GAAA,UAAFpB,CA0CtC,cAAAU,EAAAgC,UA1CsC1C,CA0CtC,WAAAU,EAAAgC,UAAA,UAAAyF,GA1CsCnI,MAAE,GAAFA,MAAE,mBAAAU,EAAA2F,iBAAFrG,MAAE,GAAFA,MAAE,OAAAU,EAAAwF,aAAAxF,EAAAgE,gBAyDf,EAAA3D,iBAAA,CAM4aqH,KAAmHA,KAAyHA,KAA4LA,KAA0GC,IAAoFC,IAAkF3I,KAAS4I,OAAA,8ZAAAtH,cAAA,EAAAuH,KAAA,CAAAC,UAAyC,IAC1tCC,MAAQ,eAAgB,IACpBC,MAAM,YAAUlD,MAAM,CAClBV,OAAQ,QACV,EACF4D,MAAM,UAAQlD,MAAM,CAChBV,OAAQ,eACR,CAAEI,OAAQ,CAAEJ,OAAQ,QAAO,EAC/B4D,MAAM,aAAWlD,MAAM,CACnBV,OAAQ,QACV,EACF6D,MAAW,qBAAsB,IAACC,MAAQ,2BAAwB,EAClED,MAAW,oBAAkBC,MAAQ,0BAAuB,EAC5DD,MAAW,qBAAmBC,MAAQ,6BAE7CC,gBAAA,IACR,OAnPKvD,CAAK,KAyWLwD,EAAW,MAAjB,MAAMA,EACFlJ,iBAAW,SAAAE,GAAA,WAAAA,GAAwFgJ,EAAW,EAC9GlJ,iBAvMyFG,MAAE,CAAAC,KAuMS8I,IACpGlJ,iBAxMyFG,MAAE,CAAAgJ,QAAA,CAwMgChI,KAAciI,KAAcC,IAAcZ,IAAU3I,IAAWsJ,QAC7L,OAJKF,CAAW","names":["MinusIcon","BaseIcon","static","ɵMinusIcon_BaseFactory","t","i0","type","selectors","standalone","features","decls","vars","consts","template","rf","ctx","getClassNames","ariaLabel","ariaHidden","role","dependencies","CommonModule","encapsulation","Panel_div_1_span_1_Template","ctx_r3","id","header","Panel_div_1_ng_container_3_Template","Panel_div_1_5_ng_template_0_Template","Panel_div_1_5_Template","Panel_div_1_button_6_ng_container_1_ng_container_1_span_1_Template","ctx_r12","expandIcon","iconClass","Panel_div_1_button_6_ng_container_1_ng_container_1_MinusIcon_2_Template","ctx_r13","Panel_div_1_button_6_ng_container_1_ng_container_1_Template","ctx_r10","Panel_div_1_button_6_ng_container_1_ng_container_2_span_1_Template","ctx_r14","collapseIcon","Panel_div_1_button_6_ng_container_1_ng_container_2_PlusIcon_2_Template","ctx_r15","Panel_div_1_button_6_ng_container_1_ng_container_2_Template","ctx_r11","Panel_div_1_button_6_ng_container_1_Template","ctx_r8","collapsed","Panel_div_1_button_6_2_ng_template_0_Template","Panel_div_1_button_6_2_Template","_c0","a0","$implicit","Panel_div_1_button_6_Template","_r18","$event","ctx_r17","onIconClick","ctx_r19","onKeyDown","ctx_r6","buttonAriaLabel","headerIconTemplate","_c1","a1","a2","Panel_div_1_Template","_r21","ctx_r20","onHeaderClick","ctx_r0","headerTemplate","iconPos","iconTemplate","toggleable","Panel_ng_container_5_Template","Panel_div_6_ng_container_2_Template","Panel_div_6_Template","ctx_r2","footerTemplate","_c2","_c3","_c4","transitionParams","height","opacity","_c5","value","params","_c6","_c7","_c8","Panel","el","style","styleClass","showHeader","toggler","transitionOptions","collapsedChange","EventEmitter","onBeforeToggle","onAfterToggle","footerFacet","templates","animating","contentTemplate","UniqueComponentId","this","constructor","ngAfterContentInit","forEach","item","getType","event","toggle","emit","originalEvent","expand","collapse","preventDefault","getBlockableElement","nativeElement","children","code","onToggleDone","contentQueries","dirIndex","Footer","PrimeTemplate","_t","first","hostAttrs","inputs","outputs","ngContentSelectors","undefined","i1","i2","PlusIcon","styles","data","animation","trigger","state","transition","animate","changeDetection","PanelModule","imports","SharedModule","RippleModule"],"sourceRoot":"webpack:///","sources":["./node_modules/primeng/fesm2022/primeng-icons-minus.mjs","./node_modules/primeng/fesm2022/primeng-panel.mjs"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component } from '@angular/core';\nimport { BaseIcon } from 'primeng/baseicon';\n\nclass MinusIcon extends BaseIcon {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: MinusIcon, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.5\", type: MinusIcon, isStandalone: true, selector: \"MinusIcon\", usesInheritance: true, ngImport: i0, template: `\n        <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" [attr.aria-label]=\"ariaLabel\" [attr.aria-hidden]=\"ariaHidden\" [attr.role]=\"role\" [class]=\"getClassNames()\">\n            <path\n                d=\"M13.2222 7.77778H0.777778C0.571498 7.77778 0.373667 7.69584 0.227806 7.54998C0.0819442 7.40412 0 7.20629 0 7.00001C0 6.79373 0.0819442 6.5959 0.227806 6.45003C0.373667 6.30417 0.571498 6.22223 0.777778 6.22223H13.2222C13.4285 6.22223 13.6263 6.30417 13.7722 6.45003C13.9181 6.5959 14 6.79373 14 7.00001C14 7.20629 13.9181 7.40412 13.7722 7.54998C13.6263 7.69584 13.4285 7.77778 13.2222 7.77778Z\"\n                fill=\"currentColor\"\n            />\n        </svg>\n    `, isInline: true, dependencies: [{ kind: \"ngmodule\", type: CommonModule }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: MinusIcon, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'MinusIcon',\n                    standalone: true,\n                    imports: [CommonModule, BaseIcon],\n                    template: `\n        <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" [attr.aria-label]=\"ariaLabel\" [attr.aria-hidden]=\"ariaHidden\" [attr.role]=\"role\" [class]=\"getClassNames()\">\n            <path\n                d=\"M13.2222 7.77778H0.777778C0.571498 7.77778 0.373667 7.69584 0.227806 7.54998C0.0819442 7.40412 0 7.20629 0 7.00001C0 6.79373 0.0819442 6.5959 0.227806 6.45003C0.373667 6.30417 0.571498 6.22223 0.777778 6.22223H13.2222C13.4285 6.22223 13.6263 6.30417 13.7722 6.45003C13.9181 6.5959 14 6.79373 14 7.00001C14 7.20629 13.9181 7.40412 13.7722 7.54998C13.6263 7.69584 13.4285 7.77778 13.2222 7.77778Z\"\n                fill=\"currentColor\"\n            />\n        </svg>\n    `\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MinusIcon };\n","import { style, state, animate, transition, trigger } from '@angular/animations';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { Footer, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { MinusIcon } from 'primeng/icons/minus';\nimport { PlusIcon } from 'primeng/icons/plus';\nimport * as i2 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport { UniqueComponentId } from 'primeng/utils';\n\n/**\n * Panel is a container with the optional content toggle feature.\n * @group Components\n */\nclass Panel {\n    el;\n    /**\n     * Defines if content of panel can be expanded and collapsed.\n     * @group Props\n     */\n    toggleable;\n    /**\n     * Header text of the panel.\n     * @group Props\n     */\n    header;\n    /**\n     * Defines the initial state of panel content, supports one or two-way binding as well.\n     * @group Props\n     */\n    collapsed;\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    style;\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Position of the icons.\n     * @group Props\n     */\n    iconPos = 'end';\n    /**\n     * Expand icon of the toggle button.\n     * @group Props\n     * @deprecated since v15.4.2, use `headericons` template instead.\n     */\n    expandIcon;\n    /**\n     * Collapse icon of the toggle button.\n     * @group Props\n     * @deprecated since v15.4.2, use `headericons` template instead.\n     */\n    collapseIcon;\n    /**\n     * Specifies if header of panel cannot be displayed.\n     * @group Props\n     * @deprecated since v15.4.2, use `headericons` template instead.\n     */\n    showHeader = true;\n    /**\n     * Specifies the toggler element to toggle the panel content.\n     * @group Props\n     */\n    toggler = 'icon';\n    /**\n     * Transition options of the animation.\n     * @group Props\n     */\n    transitionOptions = '400ms cubic-bezier(0.86, 0, 0.07, 1)';\n    /**\n     * Emitted when the collapsed changes.\n     * @param {boolean} value - New Value.\n     * @group Emits\n     */\n    collapsedChange = new EventEmitter();\n    /**\n     * Callback to invoke before panel toggle.\n     * @param {PanelBeforeToggleEvent} event - Custom panel toggle event\n     * @group Emits\n     */\n    onBeforeToggle = new EventEmitter();\n    /**\n     * Callback to invoke after panel toggle.\n     * @param {PanelAfterToggleEvent} event - Custom panel toggle event\n     * @group Emits\n     */\n    onAfterToggle = new EventEmitter();\n    footerFacet;\n    templates;\n    iconTemplate;\n    animating;\n    headerTemplate;\n    contentTemplate;\n    footerTemplate;\n    headerIconTemplate;\n    get id() {\n        return UniqueComponentId();\n    }\n    get buttonAriaLabel() {\n        return this.header;\n    }\n    constructor(el) {\n        this.el = el;\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'header':\n                    this.headerTemplate = item.template;\n                    break;\n                case 'content':\n                    this.contentTemplate = item.template;\n                    break;\n                case 'footer':\n                    this.footerTemplate = item.template;\n                    break;\n                case 'icons':\n                    this.iconTemplate = item.template;\n                    break;\n                case 'headericons':\n                    this.headerIconTemplate = item.template;\n                    break;\n                default:\n                    this.contentTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    onHeaderClick(event) {\n        if (this.toggler === 'header') {\n            this.toggle(event);\n        }\n    }\n    onIconClick(event) {\n        if (this.toggler === 'icon') {\n            this.toggle(event);\n        }\n    }\n    toggle(event) {\n        if (this.animating) {\n            return false;\n        }\n        this.animating = true;\n        this.onBeforeToggle.emit({ originalEvent: event, collapsed: this.collapsed });\n        if (this.toggleable) {\n            if (this.collapsed)\n                this.expand();\n            else\n                this.collapse();\n        }\n        event.preventDefault();\n    }\n    expand() {\n        this.collapsed = false;\n        this.collapsedChange.emit(this.collapsed);\n    }\n    collapse() {\n        this.collapsed = true;\n        this.collapsedChange.emit(this.collapsed);\n    }\n    getBlockableElement() {\n        return this.el.nativeElement.children[0];\n    }\n    onKeyDown(event) {\n        if (event.code === 'Enter' || event.code === 'Space') {\n            this.toggle(event);\n            event.preventDefault();\n        }\n    }\n    onToggleDone(event) {\n        this.animating = false;\n        this.onAfterToggle.emit({ originalEvent: event, collapsed: this.collapsed });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: Panel, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.5\", type: Panel, selector: \"p-panel\", inputs: { toggleable: \"toggleable\", header: \"header\", collapsed: \"collapsed\", style: \"style\", styleClass: \"styleClass\", iconPos: \"iconPos\", expandIcon: \"expandIcon\", collapseIcon: \"collapseIcon\", showHeader: \"showHeader\", toggler: \"toggler\", transitionOptions: \"transitionOptions\" }, outputs: { collapsedChange: \"collapsedChange\", onBeforeToggle: \"onBeforeToggle\", onAfterToggle: \"onAfterToggle\" }, host: { classAttribute: \"p-element\" }, queries: [{ propertyName: \"footerFacet\", first: true, predicate: Footer, descendants: true }, { propertyName: \"templates\", predicate: PrimeTemplate }], ngImport: i0, template: `\n        <div [attr.id]=\"id\" [attr.data-pc-name]=\"'panel'\" [ngClass]=\"{ 'p-panel p-component': true, 'p-panel-toggleable': toggleable, 'p-panel-expanded': !collapsed && toggleable }\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"p-panel-header\" *ngIf=\"showHeader\" (click)=\"onHeaderClick($event)\" [attr.id]=\"id + '-titlebar'\">\n                <span class=\"p-panel-title\" *ngIf=\"header\" [attr.id]=\"id + '_header'\">{{ header }}</span>\n                <ng-content select=\"p-header\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                <div class=\"p-panel-icons\" [ngClass]=\"{ 'p-panel-icons-start': iconPos === 'start', 'p-panel-icons-end': iconPos === 'end', 'p-panel-icons-center': iconPos === 'center' }\">\n                    <ng-template *ngTemplateOutlet=\"iconTemplate\"></ng-template>\n                    <button\n                        *ngIf=\"toggleable\"\n                        [attr.id]=\"id + '_header'\"\n                        pRipple\n                        type=\"button\"\n                        role=\"button\"\n                        class=\"p-panel-header-icon p-panel-toggler p-link\"\n                        [attr.aria-label]=\"buttonAriaLabel\"\n                        [attr.aria-controls]=\"id + '_content'\"\n                        [attr.aria-expanded]=\"!collapsed\"\n                        (click)=\"onIconClick($event)\"\n                        (keydown)=\"onKeyDown($event)\"\n                    >\n                        <ng-container *ngIf=\"!headerIconTemplate\">\n                            <ng-container *ngIf=\"!collapsed\">\n                                <span *ngIf=\"expandIcon\" [class]=\"expandIcon\" [ngClass]=\"iconClass\"></span>\n                                <MinusIcon *ngIf=\"!expandIcon\" [styleClass]=\"iconClass\" />\n                            </ng-container>\n\n                            <ng-container *ngIf=\"collapsed\">\n                                <span *ngIf=\"collapseIcon\" [class]=\"collapseIcon\" [ngClass]=\"iconClass\"></span>\n                                <PlusIcon *ngIf=\"!collapseIcon\" [styleClass]=\"iconClass\" />\n                            </ng-container>\n                        </ng-container>\n\n                        <ng-template *ngTemplateOutlet=\"headerIconTemplate; context: { $implicit: collapsed }\"></ng-template>\n                    </button>\n                </div>\n            </div>\n            <div\n                class=\"p-toggleable-content\"\n                [id]=\"id + '_content'\"\n                role=\"region\"\n                [attr.aria-labelledby]=\"id + '_header'\"\n                [attr.aria-hidden]=\"collapsed\"\n                [attr.tabindex]=\"collapsed ? '-1' : undefined\"\n                [@panelContent]=\"\n                    collapsed\n                        ? { value: 'hidden', params: { transitionParams: animating ? transitionOptions : '0ms', height: '0', opacity: '0' } }\n                        : { value: 'visible', params: { transitionParams: animating ? transitionOptions : '0ms', height: '*', opacity: '1' } }\n                \"\n                (@panelContent.done)=\"onToggleDone($event)\"\n            >\n                <div class=\"p-panel-content\">\n                    <ng-content></ng-content>\n                    <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n                </div>\n\n                <div class=\"p-panel-footer\" *ngIf=\"footerFacet || footerTemplate\">\n                    <ng-content select=\"p-footer\"></ng-content>\n                    <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n                </div>\n            </div>\n        </div>\n    `, isInline: true, styles: [\"@layer primeng{.p-panel-header{display:flex;align-items:center}.p-panel-title{line-height:1;order:1}.p-panel-header-icon{display:inline-flex;justify-content:center;align-items:center;cursor:pointer;text-decoration:none;overflow:hidden;position:relative}.p-panel-toggleable.p-panel-expanded>.p-toggleable-content:not(.ng-animating){overflow:visible}.p-panel-toggleable .p-toggleable-content{overflow:hidden}}\\n\"], dependencies: [{ kind: \"directive\", type: i0.forwardRef(() => i1.NgClass), selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i0.forwardRef(() => i1.NgIf), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i0.forwardRef(() => i1.NgTemplateOutlet), selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i0.forwardRef(() => i1.NgStyle), selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i0.forwardRef(() => i2.Ripple), selector: \"[pRipple]\" }, { kind: \"component\", type: i0.forwardRef(() => PlusIcon), selector: \"PlusIcon\" }, { kind: \"component\", type: i0.forwardRef(() => MinusIcon), selector: \"MinusIcon\" }], animations: [\n            trigger('panelContent', [\n                state('hidden', style({\n                    height: '0'\n                })),\n                state('void', style({\n                    height: '{{height}}'\n                }), { params: { height: '0' } }),\n                state('visible', style({\n                    height: '*'\n                })),\n                transition('visible <=> hidden', [animate('{{transitionParams}}')]),\n                transition('void => hidden', animate('{{transitionParams}}')),\n                transition('void => visible', animate('{{transitionParams}}'))\n            ])\n        ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: Panel, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-panel', template: `\n        <div [attr.id]=\"id\" [attr.data-pc-name]=\"'panel'\" [ngClass]=\"{ 'p-panel p-component': true, 'p-panel-toggleable': toggleable, 'p-panel-expanded': !collapsed && toggleable }\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"p-panel-header\" *ngIf=\"showHeader\" (click)=\"onHeaderClick($event)\" [attr.id]=\"id + '-titlebar'\">\n                <span class=\"p-panel-title\" *ngIf=\"header\" [attr.id]=\"id + '_header'\">{{ header }}</span>\n                <ng-content select=\"p-header\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                <div class=\"p-panel-icons\" [ngClass]=\"{ 'p-panel-icons-start': iconPos === 'start', 'p-panel-icons-end': iconPos === 'end', 'p-panel-icons-center': iconPos === 'center' }\">\n                    <ng-template *ngTemplateOutlet=\"iconTemplate\"></ng-template>\n                    <button\n                        *ngIf=\"toggleable\"\n                        [attr.id]=\"id + '_header'\"\n                        pRipple\n                        type=\"button\"\n                        role=\"button\"\n                        class=\"p-panel-header-icon p-panel-toggler p-link\"\n                        [attr.aria-label]=\"buttonAriaLabel\"\n                        [attr.aria-controls]=\"id + '_content'\"\n                        [attr.aria-expanded]=\"!collapsed\"\n                        (click)=\"onIconClick($event)\"\n                        (keydown)=\"onKeyDown($event)\"\n                    >\n                        <ng-container *ngIf=\"!headerIconTemplate\">\n                            <ng-container *ngIf=\"!collapsed\">\n                                <span *ngIf=\"expandIcon\" [class]=\"expandIcon\" [ngClass]=\"iconClass\"></span>\n                                <MinusIcon *ngIf=\"!expandIcon\" [styleClass]=\"iconClass\" />\n                            </ng-container>\n\n                            <ng-container *ngIf=\"collapsed\">\n                                <span *ngIf=\"collapseIcon\" [class]=\"collapseIcon\" [ngClass]=\"iconClass\"></span>\n                                <PlusIcon *ngIf=\"!collapseIcon\" [styleClass]=\"iconClass\" />\n                            </ng-container>\n                        </ng-container>\n\n                        <ng-template *ngTemplateOutlet=\"headerIconTemplate; context: { $implicit: collapsed }\"></ng-template>\n                    </button>\n                </div>\n            </div>\n            <div\n                class=\"p-toggleable-content\"\n                [id]=\"id + '_content'\"\n                role=\"region\"\n                [attr.aria-labelledby]=\"id + '_header'\"\n                [attr.aria-hidden]=\"collapsed\"\n                [attr.tabindex]=\"collapsed ? '-1' : undefined\"\n                [@panelContent]=\"\n                    collapsed\n                        ? { value: 'hidden', params: { transitionParams: animating ? transitionOptions : '0ms', height: '0', opacity: '0' } }\n                        : { value: 'visible', params: { transitionParams: animating ? transitionOptions : '0ms', height: '*', opacity: '1' } }\n                \"\n                (@panelContent.done)=\"onToggleDone($event)\"\n            >\n                <div class=\"p-panel-content\">\n                    <ng-content></ng-content>\n                    <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n                </div>\n\n                <div class=\"p-panel-footer\" *ngIf=\"footerFacet || footerTemplate\">\n                    <ng-content select=\"p-footer\"></ng-content>\n                    <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n                </div>\n            </div>\n        </div>\n    `, animations: [\n                        trigger('panelContent', [\n                            state('hidden', style({\n                                height: '0'\n                            })),\n                            state('void', style({\n                                height: '{{height}}'\n                            }), { params: { height: '0' } }),\n                            state('visible', style({\n                                height: '*'\n                            })),\n                            transition('visible <=> hidden', [animate('{{transitionParams}}')]),\n                            transition('void => hidden', animate('{{transitionParams}}')),\n                            transition('void => visible', animate('{{transitionParams}}'))\n                        ])\n                    ], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        class: 'p-element'\n                    }, styles: [\"@layer primeng{.p-panel-header{display:flex;align-items:center}.p-panel-title{line-height:1;order:1}.p-panel-header-icon{display:inline-flex;justify-content:center;align-items:center;cursor:pointer;text-decoration:none;overflow:hidden;position:relative}.p-panel-toggleable.p-panel-expanded>.p-toggleable-content:not(.ng-animating){overflow:visible}.p-panel-toggleable .p-toggleable-content{overflow:hidden}}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }], propDecorators: { toggleable: [{\n                type: Input\n            }], header: [{\n                type: Input\n            }], collapsed: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], iconPos: [{\n                type: Input\n            }], expandIcon: [{\n                type: Input\n            }], collapseIcon: [{\n                type: Input\n            }], showHeader: [{\n                type: Input\n            }], toggler: [{\n                type: Input\n            }], transitionOptions: [{\n                type: Input\n            }], collapsedChange: [{\n                type: Output\n            }], onBeforeToggle: [{\n                type: Output\n            }], onAfterToggle: [{\n                type: Output\n            }], footerFacet: [{\n                type: ContentChild,\n                args: [Footer]\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }] } });\nclass PanelModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: PanelModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.5\", ngImport: i0, type: PanelModule, declarations: [Panel], imports: [CommonModule, SharedModule, RippleModule, PlusIcon, MinusIcon], exports: [Panel, SharedModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: PanelModule, imports: [CommonModule, SharedModule, RippleModule, PlusIcon, MinusIcon, SharedModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: PanelModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, SharedModule, RippleModule, PlusIcon, MinusIcon],\n                    exports: [Panel, SharedModule],\n                    declarations: [Panel]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Panel, PanelModule };\n"],"x_google_ignoreList":[0,1]}